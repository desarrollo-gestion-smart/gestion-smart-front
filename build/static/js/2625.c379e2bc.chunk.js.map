{"version":3,"file":"static/js/2625.c379e2bc.chunk.js","mappings":"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","sources":["ui-component/cards/CardSecondaryAction.js","ui-component/cards/SubCard.js","views/ui-elements/basic/UIChip.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { ButtonBase, Link, Tooltip } from '@mui/material';\r\n\r\n// project imports\r\nimport Avatar from '../extended/Avatar';\r\n\r\n// ==============================|| CARD SECONDARY ACTION ||============================== //\r\n\r\nconst CardSecondaryAction = ({ title, link, icon }) => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <Tooltip title={title || 'Reference'} placement=\"left\">\r\n            <ButtonBase disableRipple>\r\n                {!icon && (\r\n                    <Avatar\r\n                        component={Link}\r\n                        href={link}\r\n                        target=\"_blank\"\r\n                        alt=\"MUI Logo\"\r\n                        size=\"badge\"\r\n                        color=\"primary\"\r\n                        outline\r\n                        aria-label=\"'ui material icon'\"\r\n                    >\r\n                        <svg width=\"500\" height=\"500\" viewBox=\"0 0 500 500\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <g clipPath=\"url(#clip0)\">\r\n                                <path\r\n                                    d=\"M100 260.9V131L212.5 195.95V239.25L137.5 195.95V282.55L100 260.9Z\"\r\n                                    fill={theme.palette.primary[800]}\r\n                                />\r\n                                <path\r\n                                    d=\"M212.5 195.95L325 131V260.9L250 304.2L212.5 282.55L287.5 239.25V195.95L212.5 239.25V195.95Z\"\r\n                                    fill={theme.palette.primary.main}\r\n                                />\r\n                                <path d=\"M212.5 282.55V325.85L287.5 369.15V325.85L212.5 282.55Z\" fill={theme.palette.primary[800]} />\r\n                                <path\r\n                                    d=\"M287.5 369.15L400 304.2V217.6L362.5 239.25V282.55L287.5 325.85V369.15ZM362.5 195.95V152.65L400 131V174.3L362.5 195.95Z\"\r\n                                    fill={theme.palette.primary.main}\r\n                                />\r\n                            </g>\r\n                            <defs>\r\n                                <clipPath id=\"clip0\">\r\n                                    <rect width=\"300\" height=\"238.3\" fill=\"white\" transform=\"translate(100 131)\" />\r\n                                </clipPath>\r\n                            </defs>\r\n                        </svg>\r\n                    </Avatar>\r\n                )}\r\n                {icon && (\r\n                    <Avatar component={Link} href={link} target=\"_blank\" size=\"badge\" color=\"primary\" outline aria-label=\"ui material icon\">\r\n                        {icon}\r\n                    </Avatar>\r\n                )}\r\n            </ButtonBase>\r\n        </Tooltip>\r\n    );\r\n};\r\n\r\nCardSecondaryAction.propTypes = {\r\n    icon: PropTypes.node,\r\n    link: PropTypes.string,\r\n    title: PropTypes.string\r\n};\r\n\r\nexport default CardSecondaryAction;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Card, CardContent, CardHeader, Divider, Typography } from '@mui/material';\r\n\r\n// ==============================|| CUSTOM SUB CARD ||============================== //\r\n\r\nconst SubCard = React.forwardRef(\r\n    ({ children, content, contentClass, darkTitle, secondary, sx = {}, contentSX = {}, title, ...others }, ref) => {\r\n        const theme = useTheme();\r\n\r\n        return (\r\n            <Card\r\n                ref={ref}\r\n                sx={{\r\n                    border: '1px solid',\r\n                    borderColor: theme.palette.mode === 'dark' ? theme.palette.dark.light + 15 : theme.palette.grey[200],\r\n                    ':hover': {\r\n                        boxShadow: theme.palette.mode === 'dark' ? '0 2px 14px 0 rgb(33 150 243 / 10%)' : '0 2px 14px 0 rgb(32 40 45 / 8%)'\r\n                    },\r\n                    ...sx\r\n                }}\r\n                {...others}\r\n            >\r\n                {/* card header and action */}\r\n                {!darkTitle && title && (\r\n                    <CardHeader sx={{ p: 2.5 }} title={<Typography variant=\"h5\">{title}</Typography>} action={secondary} />\r\n                )}\r\n                {darkTitle && title && (\r\n                    <CardHeader sx={{ p: 2.5 }} title={<Typography variant=\"h4\">{title}</Typography>} action={secondary} />\r\n                )}\r\n\r\n                {/* content & header divider */}\r\n                {title && (\r\n                    <Divider\r\n                        sx={{\r\n                            opacity: 1,\r\n                            borderColor: theme.palette.mode === 'dark' ? theme.palette.dark.light + 15 : theme.palette.grey[200]\r\n                        }}\r\n                    />\r\n                )}\r\n\r\n                {/* card content */}\r\n                {content && (\r\n                    <CardContent sx={{ p: 2.5, ...contentSX }} className={contentClass || ''}>\r\n                        {children}\r\n                    </CardContent>\r\n                )}\r\n                {!content && children}\r\n            </Card>\r\n        );\r\n    }\r\n);\r\n\r\nSubCard.propTypes = {\r\n    children: PropTypes.node,\r\n    content: PropTypes.bool,\r\n    contentClass: PropTypes.string,\r\n    darkTitle: PropTypes.bool,\r\n    secondary: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\r\n    sx: PropTypes.object,\r\n    contentSX: PropTypes.object,\r\n    title: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object])\r\n};\r\n\r\nSubCard.defaultProps = {\r\n    content: true\r\n};\r\n\r\nexport default SubCard;\r\n","// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Avatar, Grid } from '@mui/material';\r\n\r\n// project imports\r\nimport Chip from 'ui-component/extended/Chip';\r\nimport SubCard from 'ui-component/cards/SubCard';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SecondaryAction from 'ui-component/cards/CardSecondaryAction';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// assets\r\nimport User1 from 'assets/images/users/avatar-1.png';\r\n\r\n// ================================|| UI CHIP ||================================ //\r\n\r\nconst UIChip = () => {\r\n    const theme = useTheme();\r\n\r\n    const handleDelete = () => {\r\n        console.info('You clicked the delete icon.');\r\n    };\r\n\r\n    const handleClick = () => {\r\n        console.info('You clicked the Chip.');\r\n    };\r\n\r\n    return (\r\n        <MainCard title=\"Chip\" secondary={<SecondaryAction link=\"https://next.material-ui.com/components/chips/\" />}>\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12} md={6}>\r\n                    <SubCard title=\"Basic\">\r\n                        <Grid container spacing={3}>\r\n                            <Grid item>\r\n                                <Chip label=\"Default\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Chip label=\"Deletable\" onDelete={handleDelete} />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Chip label=\"Disabled\" disabled />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Chip label=\"Clickable\" onClick={handleClick} onDelete={handleDelete} />\r\n                            </Grid>\r\n\r\n                            <Grid item>\r\n                                <Chip\r\n                                    avatar={<Avatar>AK</Avatar>}\r\n                                    label=\"Clickable deletable\"\r\n                                    onClick={handleClick}\r\n                                    onDelete={handleDelete}\r\n                                    color=\"primary\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Chip label=\"Clickable\" avatar={<Avatar alt=\"Avatar 1\" src={User1} />} onClick={handleClick} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </SubCard>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} md={6}>\r\n                    <SubCard title=\"Outlined\">\r\n                        <Grid container spacing={3}>\r\n                            <Grid item>\r\n                                <Chip label=\"Default\" variant=\"outlined\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Chip label=\"Deletable\" onDelete={handleDelete} variant=\"outlined\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Chip label=\"Disabled\" disabled variant=\"outlined\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Chip label=\"Clickable\" variant=\"outlined\" onClick={handleClick} onDelete={handleDelete} />\r\n                            </Grid>\r\n\r\n                            <Grid item>\r\n                                <Chip\r\n                                    avatar={<Avatar>AK</Avatar>}\r\n                                    label=\"Clickable deletable\"\r\n                                    onClick={handleClick}\r\n                                    onDelete={handleDelete}\r\n                                    color=\"primary\"\r\n                                    variant=\"outlined\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Chip\r\n                                    label=\"Clickable\"\r\n                                    avatar={<Avatar alt=\"Avatar 1\" src={User1} />}\r\n                                    onClick={handleClick}\r\n                                    variant=\"outlined\"\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </SubCard>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                    <SubCard title=\"Outlined Color\">\r\n                        <Grid container spacing={3}>\r\n                            <Grid item>\r\n                                <Chip label=\"Default\" variant=\"outlined\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Chip label=\"Secondary\" variant=\"outlined\" chipcolor=\"secondary\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Chip label=\"Success\" onDelete={handleDelete} variant=\"outlined\" chipcolor=\"success\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Chip label=\"Error\" onDelete={handleDelete} variant=\"outlined\" chipcolor=\"error\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Chip label=\"secondary\" onDelete={handleDelete} variant=\"outlined\" chipcolor=\"secondary\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Chip label=\"Disabled\" disabled variant=\"outlined\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Chip label=\"Clickable\" variant=\"outlined\" onClick={handleClick} onDelete={handleDelete} />\r\n                            </Grid>\r\n\r\n                            <Grid item>\r\n                                <Chip\r\n                                    avatar={\r\n                                        <Avatar\r\n                                            sx={{\r\n                                                bgcolor: theme.palette.warning.dark,\r\n                                                color: `${theme.palette.background.paper} !important`\r\n                                            }}\r\n                                        >\r\n                                            AK\r\n                                        </Avatar>\r\n                                    }\r\n                                    label=\"Clickable deletable\"\r\n                                    onClick={handleClick}\r\n                                    onDelete={handleDelete}\r\n                                    variant=\"outlined\"\r\n                                    chipcolor=\"warning\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Chip\r\n                                    label=\"Clickable\"\r\n                                    avatar={<Avatar alt=\"Avatar 1\" src={User1} />}\r\n                                    onClick={handleClick}\r\n                                    variant=\"outlined\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Chip\r\n                                    label=\"Clickable\"\r\n                                    avatar={<Avatar alt=\"Avatar 1\" src={User1} />}\r\n                                    onClick={handleClick}\r\n                                    variant=\"outlined\"\r\n                                    chipcolor=\"secondary\"\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </SubCard>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                    <SubCard title=\"Filled Color\">\r\n                        <Grid container spacing={3}>\r\n                            <Grid item>\r\n                                <Chip label=\"Default\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Chip label=\"Secondary\" chipcolor=\"secondary\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Chip label=\"Success\" onDelete={handleDelete} chipcolor=\"success\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Chip label=\"Error\" onDelete={handleDelete} chipcolor=\"error\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Chip label=\"secondary\" onDelete={handleDelete} chipcolor=\"secondary\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Chip label=\"Disabled\" disabled />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Chip label=\"Clickable\" onClick={handleClick} onDelete={handleDelete} />\r\n                            </Grid>\r\n\r\n                            <Grid item>\r\n                                <Chip\r\n                                    avatar={\r\n                                        <Avatar\r\n                                            sx={{\r\n                                                bgcolor: theme.palette.warning.dark,\r\n                                                color: `${theme.palette.background.paper} !important`\r\n                                            }}\r\n                                        >\r\n                                            AK\r\n                                        </Avatar>\r\n                                    }\r\n                                    label=\"Clickable delete\"\r\n                                    onClick={handleClick}\r\n                                    onDelete={handleDelete}\r\n                                    chipcolor=\"warning\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Chip label=\"Clickable\" avatar={<Avatar alt=\"Avatar 1\" src={User1} />} onClick={handleClick} />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Chip\r\n                                    label=\"Clickable\"\r\n                                    avatar={<Avatar alt=\"Avatar 1\" src={User1} />}\r\n                                    onClick={handleClick}\r\n                                    chipcolor=\"secondary\"\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </SubCard>\r\n                </Grid>\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default UIChip;\r\n"],"names":["_ref","title","link","icon","theme","useTheme","_jsx","Tooltip","placement","children","_jsxs","ButtonBase","disableRipple","Avatar","component","Link","href","target","alt","size","color","outline","width","height","viewBox","fill","xmlns","clipPath","d","palette","primary","main","id","transform","SubCard","React","ref","content","contentClass","darkTitle","secondary","sx","contentSX","others","Card","border","borderColor","mode","dark","light","grey","boxShadow","CardHeader","p","Typography","variant","action","Divider","opacity","CardContent","className","defaultProps","UIChip","handleDelete","console","info","handleClick","MainCard","SecondaryAction","Grid","container","spacing","gridSpacing","item","xs","md","Chip","label","onDelete","disabled","onClick","avatar","src","User1","chipcolor","bgcolor","warning","background","paper"],"sourceRoot":""}