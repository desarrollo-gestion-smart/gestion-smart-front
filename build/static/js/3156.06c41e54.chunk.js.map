{"version":3,"file":"static/js/3156.06c41e54.chunk.js","mappings":"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","sources":["ui-component/cards/AuthFooter.js","views/pages/authentication/AuthCardWrapper.js","views/pages/authentication/AuthWrapper1.js","views/pages/authentication/auth-forms/AuthRegister.js","views/pages/authentication/authentication3/Register3.js"],"sourcesContent":["// material-ui\r\nimport { Link, Typography, Stack } from '@mui/material';\r\n\r\n// ==============================|| FOOTER - AUTHENTICATION 2 & 3 ||============================== //\r\n\r\nconst AuthFooter = () => (\r\n    <Stack direction=\"row\" justifyContent=\"space-between\">\r\n        <Typography variant=\"subtitle2\" component={Link} href=\"https://berrydashboard.io\" target=\"_blank\" underline=\"hover\">\r\n            berrydashboard.io\r\n        </Typography>\r\n        <Typography variant=\"subtitle2\" component={Link} href=\"https://codedthemes.com\" target=\"_blank\" underline=\"hover\">\r\n            &copy; codedthemes.com\r\n        </Typography>\r\n    </Stack>\r\n);\r\n\r\nexport default AuthFooter;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Box } from '@mui/material';\r\n\r\n// project import\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\r\n\r\nconst AuthCardWrapper = ({ children, ...other }) => (\r\n    <MainCard\r\n        sx={{\r\n            maxWidth: { xs: 400, lg: 475 },\r\n            margin: { xs: 2.5, md: 3 },\r\n            '& > *': {\r\n                flexGrow: 1,\r\n                flexBasis: '50%'\r\n            }\r\n        }}\r\n        content={false}\r\n        {...other}\r\n    >\r\n        <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\r\n    </MainCard>\r\n);\r\n\r\nAuthCardWrapper.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default AuthCardWrapper;\r\n","// material-ui\r\nimport { styled } from '@mui/material/styles';\r\n\r\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\r\n\r\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? theme.palette.background.default : theme.palette.grey[100],\r\n    minHeight: '100vh'\r\n}));\r\n\r\nexport default AuthWrapper1;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'store';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n  useMediaQuery,\r\n  Modal\r\n} from '@mui/material';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\n\r\nconst JWTRegister = ({ ...others }) => {\r\n  const theme = useTheme();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n  const [openModal, setOpenModal] = useState(false);\r\n\r\n  const handleCloseModal = () => setOpenModal(false);\r\n\r\n  return (\r\n    <>\r\n      <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\r\n        <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Formik\r\n        initialValues={{\r\n          email: '',\r\n          password: '',\r\n          firstName: '',\r\n          lastName: '',\r\n          submit: null\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          email: Yup.string().email('Debe ser un correo válido').max(255).required('El correo es obligatorio'),\r\n          password: Yup.string().max(255).required('La contraseña es obligatoria'),\r\n          firstName: Yup.string().max(255).required('El nombre es obligatorio'),\r\n          lastName: Yup.string().max(255).required('El apellido es obligatorio')\r\n        })}\r\n        onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n          try {\r\n            const response = await fetch('http://localhost:5000/api/users/register', {\r\n              method: 'POST',\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n              },\r\n              body: JSON.stringify({\r\n                firstName: values.firstName,\r\n                lastName: values.lastName,\r\n                email: values.email,\r\n                password: values.password,\r\n              }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n              throw new Error('Error en la respuesta del servidor');\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            if (data.success) {\r\n              setStatus({ success: true });\r\n              setSubmitting(false);\r\n              setOpenModal(true);  \r\n            } else {\r\n              setErrors({ submit: 'Error al registrar el usuario' });\r\n              setSubmitting(false);\r\n            }\r\n          } catch (error) {\r\n            console.error('Error al registrar el usuario:', error);\r\n            setErrors({ submit: 'Error al registrar el usuario' });\r\n            setSubmitting(false);\r\n          }\r\n        }}\r\n      >\r\n        {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n          <form noValidate onSubmit={handleSubmit} {...others}>\r\n            <Grid container spacing={matchDownSM ? 0 : 2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Nombre\"\r\n                  margin=\"normal\"\r\n                  name=\"firstName\"\r\n                  type=\"text\"\r\n                  value={values.firstName}\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  sx={{ ...theme.typography.customInput }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Apellido\"\r\n                  margin=\"normal\"\r\n                  name=\"lastName\"\r\n                  type=\"text\"\r\n                  value={values.lastName}\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  sx={{ ...theme.typography.customInput }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Correo electrónico\"\r\n              margin=\"normal\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              value={values.email}\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              error={Boolean(touched.email && errors.email)}\r\n              helperText={touched.email && errors.email}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              label=\"Contraseña\"\r\n              margin=\"normal\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              value={values.password}\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              error={Boolean(touched.password && errors.password)}\r\n              helperText={touched.password && errors.password}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={isSubmitting}\r\n            >\r\n              Registrarme\r\n            </Button>\r\n            {errors.submit && (\r\n              <Typography color=\"error\" variant=\"body2\">\r\n                {errors.submit}\r\n              </Typography>\r\n            )}\r\n          </form>\r\n        )}\r\n      </Formik>\r\n\r\n      <Modal\r\n        open={openModal}\r\n        onClose={handleCloseModal}\r\n        aria-labelledby=\"modal-title\"\r\n        aria-describedby=\"modal-description\"\r\n      >\r\n        <Box\r\n          sx={{\r\n            position: 'absolute',\r\n            top: '50%',\r\n            left: '50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            width: 400,\r\n            bgcolor: 'background.paper',\r\n            boxShadow: 24,\r\n            p: 4,\r\n          }}\r\n        >\r\n          <Typography id=\"modal-title\" variant=\"h6\" component=\"h2\">\r\n            Registro exitoso\r\n          </Typography>\r\n          <Typography id=\"modal-description\" sx={{ mt: 2 }}>\r\n            Tu cuenta ha sido creada, te enviamos un mail para confirmar tu registro\r\n          </Typography>\r\n          <Button onClick={handleCloseModal} color=\"primary\" sx={{ mt: 2 }}>\r\n            Close\r\n          </Button>\r\n        </Box>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default JWTRegister;\r\n","import { Link } from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from '@mui/material';\r\n\r\n// project imports\r\nimport AuthWrapper1 from '../AuthWrapper1';\r\nimport AuthCardWrapper from '../AuthCardWrapper';\r\nimport Logo from 'ui-component/Logo';\r\nimport AuthRegister from '../auth-forms/AuthRegister';\r\nimport AuthFooter from 'ui-component/cards/AuthFooter';\r\nimport useAuth from 'hooks/useAuth';\r\n\r\n// assets\r\n\r\n// ===============================|| AUTH3 - REGISTER ||=============================== //\r\n\r\nconst Register = () => {\r\n    const theme = useTheme();\r\n    const { isLoggedIn } = useAuth();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n    return (\r\n        <AuthWrapper1>\r\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\r\n                <Grid item xs={12}>\r\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\r\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\r\n                            <AuthCardWrapper>\r\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\r\n                                    <Grid item sx={{ mb: 3 }}>\r\n                                        <Link to=\"#\" aria-label=\"theme-logo\">\r\n                                            <Logo />\r\n                                        </Link>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid\r\n                                            container\r\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\r\n                                            alignItems=\"center\"\r\n                                            justifyContent=\"center\"\r\n                                        >\r\n                                            <Grid item>\r\n                                                <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\r\n                                                    <Typography\r\n                                                        color={theme.palette.secondary.main}\r\n                                                        gutterBottom\r\n                                                        variant={matchDownSM ? 'h3' : 'h2'}\r\n                                                    >\r\n                                                        Sign up\r\n                                                    </Typography>\r\n                                                    <Typography\r\n                                                        variant=\"caption\"\r\n                                                        fontSize=\"16px\"\r\n                                                        textAlign={matchDownSM ? 'center' : 'inherit'}\r\n                                                    >\r\n                                                        Enter your credentials to continue\r\n                                                    </Typography>\r\n                                                </Stack>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <AuthRegister />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Divider />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\r\n                                            <Typography\r\n                                                component={Link}\r\n                                                to={isLoggedIn ? '/pages/login/login3' : '/'}\r\n                                                variant=\"subtitle1\"\r\n                                                sx={{ textDecoration: 'none' }}\r\n                                            >\r\n                                                Already have an account?\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </AuthCardWrapper>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\r\n                    <AuthFooter />\r\n                </Grid>\r\n            </Grid>\r\n        </AuthWrapper1>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n"],"names":["AuthFooter","_jsxs","Stack","direction","justifyContent","children","_jsx","Typography","variant","component","Link","href","target","underline","_ref","other","MainCard","sx","maxWidth","xs","lg","margin","md","flexGrow","flexBasis","content","Box","p","sm","xl","styled","theme","backgroundColor","palette","mode","background","default","grey","minHeight","others","useTheme","matchDownSM","useNavigate","useDispatch","useMediaQuery","breakpoints","down","openModal","setOpenModal","useState","handleCloseModal","_Fragment","Grid","container","spacing","item","alignItems","Formik","initialValues","email","password","firstName","lastName","submit","validationSchema","Yup","shape","max","required","onSubmit","async","values","_ref2","setErrors","setStatus","setSubmitting","response","fetch","method","headers","body","JSON","stringify","ok","Error","json","success","error","console","_ref3","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","TextField","fullWidth","label","name","type","value","onBlur","onChange","typography","customInput","Boolean","helperText","Button","color","disabled","Modal","open","onClose","position","top","left","transform","width","bgcolor","boxShadow","id","mt","onClick","Register","isLoggedIn","useAuth","AuthWrapper1","m","mb","AuthCardWrapper","to","Logo","secondary","main","gutterBottom","fontSize","textAlign","AuthRegister","Divider","textDecoration"],"sourceRoot":""}