{"version":3,"file":"static/js/1362.92cb98c8.chunk.js","mappings":"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","sources":["ui-component/cards/CardSecondaryAction.js","views/forms/plugins/Modal/SimpleModal.js","views/forms/plugins/Modal/ServerModal.js","views/forms/plugins/Modal/index.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { ButtonBase, Link, Tooltip } from '@mui/material';\r\n\r\n// project imports\r\nimport Avatar from '../extended/Avatar';\r\n\r\n// ==============================|| CARD SECONDARY ACTION ||============================== //\r\n\r\nconst CardSecondaryAction = ({ title, link, icon }) => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <Tooltip title={title || 'Reference'} placement=\"left\">\r\n            <ButtonBase disableRipple>\r\n                {!icon && (\r\n                    <Avatar\r\n                        component={Link}\r\n                        href={link}\r\n                        target=\"_blank\"\r\n                        alt=\"MUI Logo\"\r\n                        size=\"badge\"\r\n                        color=\"primary\"\r\n                        outline\r\n                        aria-label=\"'ui material icon'\"\r\n                    >\r\n                        <svg width=\"500\" height=\"500\" viewBox=\"0 0 500 500\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <g clipPath=\"url(#clip0)\">\r\n                                <path\r\n                                    d=\"M100 260.9V131L212.5 195.95V239.25L137.5 195.95V282.55L100 260.9Z\"\r\n                                    fill={theme.palette.primary[800]}\r\n                                />\r\n                                <path\r\n                                    d=\"M212.5 195.95L325 131V260.9L250 304.2L212.5 282.55L287.5 239.25V195.95L212.5 239.25V195.95Z\"\r\n                                    fill={theme.palette.primary.main}\r\n                                />\r\n                                <path d=\"M212.5 282.55V325.85L287.5 369.15V325.85L212.5 282.55Z\" fill={theme.palette.primary[800]} />\r\n                                <path\r\n                                    d=\"M287.5 369.15L400 304.2V217.6L362.5 239.25V282.55L287.5 325.85V369.15ZM362.5 195.95V152.65L400 131V174.3L362.5 195.95Z\"\r\n                                    fill={theme.palette.primary.main}\r\n                                />\r\n                            </g>\r\n                            <defs>\r\n                                <clipPath id=\"clip0\">\r\n                                    <rect width=\"300\" height=\"238.3\" fill=\"white\" transform=\"translate(100 131)\" />\r\n                                </clipPath>\r\n                            </defs>\r\n                        </svg>\r\n                    </Avatar>\r\n                )}\r\n                {icon && (\r\n                    <Avatar component={Link} href={link} target=\"_blank\" size=\"badge\" color=\"primary\" outline aria-label=\"ui material icon\">\r\n                        {icon}\r\n                    </Avatar>\r\n                )}\r\n            </ButtonBase>\r\n        </Tooltip>\r\n    );\r\n};\r\n\r\nCardSecondaryAction.propTypes = {\r\n    icon: PropTypes.node,\r\n    link: PropTypes.string,\r\n    title: PropTypes.string\r\n};\r\n\r\nexport default CardSecondaryAction;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { Button, CardContent, CardActions, Divider, Grid, IconButton, Modal, Typography } from '@mui/material';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n// assets\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\n// generate random\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\n// modal position\r\nfunction getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`\r\n    };\r\n}\r\n\r\nconst Body = React.forwardRef(({ modalStyle, handleClose }, ref) => (\r\n    <div ref={ref} tabIndex={-1}>\r\n        <MainCard\r\n            style={modalStyle}\r\n            sx={{\r\n                position: 'absolute',\r\n                width: { xs: 280, lg: 450 },\r\n                top: '50%',\r\n                left: '50%',\r\n                transform: 'translate(-50%, -50%)'\r\n            }}\r\n            title=\"Title\"\r\n            content={false}\r\n            secondary={\r\n                <IconButton onClick={handleClose} size=\"large\">\r\n                    <CloseIcon fontSize=\"small\" />\r\n                </IconButton>\r\n            }\r\n        >\r\n            <CardContent>\r\n                <Typography variant=\"body1\">Laboris non ad et aute sint aliquip mollit voluptate velit dolore magna fugiat ex.</Typography>\r\n                <Typography variant=\"body2\" sx={{ mt: 2 }}>\r\n                    Commodo amet veniam nostrud mollit quis sint qui nulla elit esse excepteur ullamco esse magna. Nisi duis aute est in\r\n                    mollit irure enim tempor in.\r\n                </Typography>\r\n            </CardContent>\r\n            <Divider />\r\n            <CardActions>\r\n                <SimpleModal />\r\n            </CardActions>\r\n        </MainCard>\r\n    </div>\r\n));\r\n\r\nBody.propTypes = {\r\n    modalStyle: PropTypes.object,\r\n    handleClose: PropTypes.func\r\n};\r\n\r\n// ==============================|| SIMPLE MODAL ||============================== //\r\n\r\nexport default function SimpleModal() {\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <Grid container justifyContent=\"flex-end\">\r\n            <Button variant=\"contained\" type=\"button\" onClick={handleOpen}>\r\n                Open Modal\r\n            </Button>\r\n            <Modal open={open} onClose={handleClose} aria-labelledby=\"simple-modal-title\" aria-describedby=\"simple-modal-description\">\r\n                <Body modalStyle={modalStyle} handleClose={handleClose} />\r\n            </Modal>\r\n        </Grid>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\n// material-ui\r\nimport { styled } from '@mui/material/styles';\r\nimport { Button, CardContent, CardActions, Divider, Grid, IconButton, Modal, Typography } from '@mui/material';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n// assets\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nconst ModalWrapper = styled('div')({\r\n    marginBottom: 16,\r\n    height: 500,\r\n    flexGrow: 1,\r\n    minWidth: 300,\r\n    zIndex: -1,\r\n    transform: 'translateZ(0)',\r\n    '@media all and (-ms-high-contrast: none)': {\r\n        display: 'none'\r\n    }\r\n});\r\n\r\n// ==============================|| SERVER MODAL ||============================== //\r\n\r\nexport default function ServerModal() {\r\n    const rootRef = React.useRef(null);\r\n\r\n    return (\r\n        <ModalWrapper ref={rootRef}>\r\n            <Modal\r\n                disablePortal\r\n                disableEnforceFocus\r\n                disableAutoFocus\r\n                open\r\n                aria-labelledby=\"server-modal-title\"\r\n                aria-describedby=\"server-modal-description\"\r\n                sx={{\r\n                    display: 'flex',\r\n                    p: 1,\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center'\r\n                }}\r\n                container={() => rootRef.current}\r\n            >\r\n                <MainCard\r\n                    sx={{\r\n                        width: 450,\r\n                        zIndex: 1\r\n                    }}\r\n                    title=\"Server Side Modal\"\r\n                    content={false}\r\n                    secondary={\r\n                        <IconButton size=\"large\">\r\n                            <CloseIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    }\r\n                >\r\n                    <CardContent>\r\n                        <Typography variant=\"body1\">\r\n                            Laboris non ad et aute sint aliquip mollit voluptate velit dolore magna fugiat ex.\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" sx={{ mt: 2 }}>\r\n                            Commodo amet veniam nostrud mollit quis sint qui nulla elit esse excepteur ullamco esse magna. Nisi duis aute\r\n                            est in mollit irure enim tempor in.\r\n                        </Typography>\r\n                    </CardContent>\r\n                    <Divider />\r\n                    <CardActions>\r\n                        <Grid container justifyContent=\"flex-end\">\r\n                            <Button variant=\"contained\" type=\"button\">\r\n                                Open Modal\r\n                            </Button>\r\n                        </Grid>\r\n                    </CardActions>\r\n                </MainCard>\r\n            </Modal>\r\n        </ModalWrapper>\r\n    );\r\n}\r\n","// project imports\r\nimport SimpleModal from './SimpleModal';\r\nimport ServerModal from './ServerModal';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SecondaryAction from 'ui-component/cards/CardSecondaryAction';\r\n\r\n// ==============================|| MODAL PAGE ||============================== //\r\n\r\nconst Modal = () => (\r\n    <MainCard title=\"Simple Modal\" secondary={<SecondaryAction link=\"https://next.material-ui.com/components/modal/\" />}>\r\n        <ServerModal />\r\n        <SimpleModal />\r\n    </MainCard>\r\n);\r\n\r\nexport default Modal;\r\n"],"names":["_ref","title","link","icon","theme","useTheme","_jsx","Tooltip","placement","children","_jsxs","ButtonBase","disableRipple","Avatar","component","Link","href","target","alt","size","color","outline","width","height","viewBox","fill","xmlns","clipPath","d","palette","primary","main","id","transform","rand","Math","round","random","getModalStyle","top","left","Body","React","ref","modalStyle","handleClose","tabIndex","MainCard","style","sx","position","xs","lg","content","secondary","IconButton","onClick","CloseIcon","fontSize","CardContent","Typography","variant","mt","Divider","CardActions","SimpleModal","open","setOpen","Grid","container","justifyContent","Button","type","handleOpen","Modal","onClose","propTypes","PropTypes","ModalWrapper","styled","marginBottom","flexGrow","minWidth","zIndex","display","ServerModal","rootRef","disablePortal","disableEnforceFocus","disableAutoFocus","p","alignItems","current","SecondaryAction"],"sourceRoot":""}