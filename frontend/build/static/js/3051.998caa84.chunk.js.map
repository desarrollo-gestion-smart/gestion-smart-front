{"version":3,"file":"static/js/3051.998caa84.chunk.js","mappings":"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","sources":["ui-component/cards/CardSecondaryAction.js","ui-component/cards/SubCard.js","ui-component/extended/notistack/ColorVariants.js","ui-component/extended/notistack/CustomComponent.js","ui-component/extended/notistack/Dense.js","ui-component/extended/notistack/DismissSnackBar.js","ui-component/extended/notistack/HideDuration.js","ui-component/extended/notistack/IconVariants.js","ui-component/extended/notistack/MaxSnackbar.js","ui-component/extended/notistack/PositioningSnackbar.js","ui-component/extended/notistack/PreventDuplicate.js","ui-component/extended/notistack/SnackBarAction.js","ui-component/extended/notistack/TransitionBar.js","views/ui-elements/advance/UISnackbar.js","../node_modules/@mui/icons-material/AddOutlined.js","../node_modules/@mui/icons-material/CheckCircle.js","../node_modules/@mui/icons-material/CloseOutlined.js","../node_modules/@mui/icons-material/KeyboardArrowDownOutlined.js","../node_modules/@mui/icons-material/RemoveOutlined.js","../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/Checkbox/Checkbox.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { ButtonBase, Link, Tooltip } from '@mui/material';\r\n\r\n// project imports\r\nimport Avatar from '../extended/Avatar';\r\n\r\n// ==============================|| CARD SECONDARY ACTION ||============================== //\r\n\r\nconst CardSecondaryAction = ({ title, link, icon }) => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <Tooltip title={title || 'Reference'} placement=\"left\">\r\n            <ButtonBase disableRipple>\r\n                {!icon && (\r\n                    <Avatar\r\n                        component={Link}\r\n                        href={link}\r\n                        target=\"_blank\"\r\n                        alt=\"MUI Logo\"\r\n                        size=\"badge\"\r\n                        color=\"primary\"\r\n                        outline\r\n                        aria-label=\"'ui material icon'\"\r\n                    >\r\n                        <svg width=\"500\" height=\"500\" viewBox=\"0 0 500 500\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <g clipPath=\"url(#clip0)\">\r\n                                <path\r\n                                    d=\"M100 260.9V131L212.5 195.95V239.25L137.5 195.95V282.55L100 260.9Z\"\r\n                                    fill={theme.palette.primary[800]}\r\n                                />\r\n                                <path\r\n                                    d=\"M212.5 195.95L325 131V260.9L250 304.2L212.5 282.55L287.5 239.25V195.95L212.5 239.25V195.95Z\"\r\n                                    fill={theme.palette.primary.main}\r\n                                />\r\n                                <path d=\"M212.5 282.55V325.85L287.5 369.15V325.85L212.5 282.55Z\" fill={theme.palette.primary[800]} />\r\n                                <path\r\n                                    d=\"M287.5 369.15L400 304.2V217.6L362.5 239.25V282.55L287.5 325.85V369.15ZM362.5 195.95V152.65L400 131V174.3L362.5 195.95Z\"\r\n                                    fill={theme.palette.primary.main}\r\n                                />\r\n                            </g>\r\n                            <defs>\r\n                                <clipPath id=\"clip0\">\r\n                                    <rect width=\"300\" height=\"238.3\" fill=\"white\" transform=\"translate(100 131)\" />\r\n                                </clipPath>\r\n                            </defs>\r\n                        </svg>\r\n                    </Avatar>\r\n                )}\r\n                {icon && (\r\n                    <Avatar component={Link} href={link} target=\"_blank\" size=\"badge\" color=\"primary\" outline aria-label=\"ui material icon\">\r\n                        {icon}\r\n                    </Avatar>\r\n                )}\r\n            </ButtonBase>\r\n        </Tooltip>\r\n    );\r\n};\r\n\r\nCardSecondaryAction.propTypes = {\r\n    icon: PropTypes.node,\r\n    link: PropTypes.string,\r\n    title: PropTypes.string\r\n};\r\n\r\nexport default CardSecondaryAction;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Card, CardContent, CardHeader, Divider, Typography } from '@mui/material';\r\n\r\n// ==============================|| CUSTOM SUB CARD ||============================== //\r\n\r\nconst SubCard = React.forwardRef(\r\n    ({ children, content, contentClass, darkTitle, secondary, sx = {}, contentSX = {}, title, ...others }, ref) => {\r\n        const theme = useTheme();\r\n\r\n        return (\r\n            <Card\r\n                ref={ref}\r\n                sx={{\r\n                    border: '1px solid',\r\n                    borderColor: theme.palette.mode === 'dark' ? theme.palette.dark.light + 15 : theme.palette.grey[200],\r\n                    ':hover': {\r\n                        boxShadow: theme.palette.mode === 'dark' ? '0 2px 14px 0 rgb(33 150 243 / 10%)' : '0 2px 14px 0 rgb(32 40 45 / 8%)'\r\n                    },\r\n                    ...sx\r\n                }}\r\n                {...others}\r\n            >\r\n                {/* card header and action */}\r\n                {!darkTitle && title && (\r\n                    <CardHeader sx={{ p: 2.5 }} title={<Typography variant=\"h5\">{title}</Typography>} action={secondary} />\r\n                )}\r\n                {darkTitle && title && (\r\n                    <CardHeader sx={{ p: 2.5 }} title={<Typography variant=\"h4\">{title}</Typography>} action={secondary} />\r\n                )}\r\n\r\n                {/* content & header divider */}\r\n                {title && (\r\n                    <Divider\r\n                        sx={{\r\n                            opacity: 1,\r\n                            borderColor: theme.palette.mode === 'dark' ? theme.palette.dark.light + 15 : theme.palette.grey[200]\r\n                        }}\r\n                    />\r\n                )}\r\n\r\n                {/* card content */}\r\n                {content && (\r\n                    <CardContent sx={{ p: 2.5, ...contentSX }} className={contentClass || ''}>\r\n                        {children}\r\n                    </CardContent>\r\n                )}\r\n                {!content && children}\r\n            </Card>\r\n        );\r\n    }\r\n);\r\n\r\nSubCard.propTypes = {\r\n    children: PropTypes.node,\r\n    content: PropTypes.bool,\r\n    contentClass: PropTypes.string,\r\n    darkTitle: PropTypes.bool,\r\n    secondary: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\r\n    sx: PropTypes.object,\r\n    contentSX: PropTypes.object,\r\n    title: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object])\r\n};\r\n\r\nSubCard.defaultProps = {\r\n    content: true\r\n};\r\n\r\nexport default SubCard;\r\n","// material-ul\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Button, Grid } from '@mui/material';\r\n\r\n// third-party\r\nimport { enqueueSnackbar } from 'notistack';\r\n\r\n// project import\r\nimport SubCard from 'ui-component/cards/SubCard';\r\n\r\n// ==============================|| NOTISTACK - COLOR VARIANTS ||============================== //\r\n\r\nexport default function ColorVariants() {\r\n    const theme = useTheme();\r\n    return (\r\n        <SubCard title=\"Color Variants\">\r\n            <Grid container spacing={2}>\r\n                <Grid item>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        sx={{\r\n                            backgroundColor: theme.palette.grey[900],\r\n                            '&:hover': {\r\n                                backgroundColor: theme.palette.grey[700]\r\n                            }\r\n                        }}\r\n                        onClick={() => enqueueSnackbar('This is default message.')}\r\n                    >\r\n                        Default\r\n                    </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"success\"\r\n                        onClick={() => enqueueSnackbar('his is success message', { variant: 'success' })}\r\n                    >\r\n                        Success\r\n                    </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"warning\"\r\n                        onClick={() => enqueueSnackbar('This is warning message', { variant: 'warning' })}\r\n                    >\r\n                        Warning\r\n                    </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button variant=\"contained\" color=\"info\" onClick={() => enqueueSnackbar('This is info message', { variant: 'info' })}>\r\n                        Info\r\n                    </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"error\"\r\n                        onClick={() => enqueueSnackbar('This is error message', { variant: 'error' })}\r\n                    >\r\n                        Error\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </SubCard>\r\n    );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { useState, forwardRef, useCallback } from 'react';\r\n\r\n// material-ui\r\nimport { styled } from '@mui/material/styles';\r\nimport { Box, Button, Card, Typography, CardActions, IconButton, Collapse, Paper } from '@mui/material';\r\n\r\n// third-party\r\nimport { enqueueSnackbar, useSnackbar, SnackbarContent } from 'notistack';\r\n\r\n// project import\r\nimport SubCard from 'ui-component/cards/SubCard';\r\n\r\n// assets\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport CloseOutlinedIcon from '@mui/icons-material/CloseOutlined';\r\nimport KeyboardArrowDownOutlinedIcon from '@mui/icons-material/KeyboardArrowDownOutlined';\r\n\r\nconst SnackbarBox = styled(SnackbarContent)(() => ({\r\n    '@media (min-width:600px)': {\r\n        minWidth: '344px !important'\r\n    }\r\n}));\r\n\r\nconst CustomNotistack = forwardRef((props, ref) => {\r\n    const { closeSnackbar } = useSnackbar();\r\n    const [expanded, setExpanded] = useState(false);\r\n\r\n    const handleExpandClick = useCallback(() => {\r\n        setExpanded((prevState) => !prevState);\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const handleDismiss = useCallback(() => {\r\n        closeSnackbar(props.id);\r\n    }, [props.id, closeSnackbar]);\r\n\r\n    return (\r\n        <SnackbarBox ref={ref}>\r\n            <Card sx={{ bgcolor: 'warning.light', width: '100%' }}>\r\n                <CardActions sx={{ padding: '8px 8px 8px 16px', justifyContent: 'space-between' }}>\r\n                    <Typography variant=\"subtitle2\">{props.message}</Typography>\r\n                    <Box sx={{ marginLeft: 'auto' }}>\r\n                        <IconButton\r\n                            aria-label=\"Show more\"\r\n                            sx={{ p: 1, transition: 'all .2s', transform: expanded ? 'rotate(180deg)' : 'rotate(0deg)' }}\r\n                            onClick={handleExpandClick}\r\n                        >\r\n                            <KeyboardArrowDownOutlinedIcon />\r\n                        </IconButton>\r\n                        <IconButton sx={{ p: 1, transition: 'all .2s' }} onClick={handleDismiss}>\r\n                            <CloseOutlinedIcon />\r\n                        </IconButton>\r\n                    </Box>\r\n                </CardActions>\r\n                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                    <Paper sx={{ padding: 2, borderTopLeftRadius: 0, borderTopRightRadius: 0, bgcolor: 'warning.lighter' }}>\r\n                        <Typography gutterBottom>PDF ready</Typography>\r\n                        <Button\r\n                            size=\"small\"\r\n                            startIcon={<CheckCircleIcon sx={{ fontSize: 16 }} />}\r\n                            sx={{ '&:hover': { bgcolor: 'transparent' } }}\r\n                        >\r\n                            Download now\r\n                        </Button>\r\n                    </Paper>\r\n                </Collapse>\r\n            </Card>\r\n        </SnackbarBox>\r\n    );\r\n});\r\n\r\nCustomNotistack.propTypes = {\r\n    id: PropTypes.number,\r\n    message: PropTypes.string\r\n};\r\n\r\n// ==============================|| NOTISTACK - CUSTOM STYLE ||============================== //\r\n\r\nexport default function CustomComponent() {\r\n    return (\r\n        <SubCard title=\"Custom Component\">\r\n            <Button\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                sx={{ marginBlockStart: 2 }}\r\n                onClick={() => {\r\n                    enqueueSnackbar(\"You're report is ready\", {\r\n                        anchorOrigin: {\r\n                            vertical: 'bottom',\r\n                            horizontal: 'right'\r\n                        },\r\n                        content: (key, message) => <CustomNotistack id={key} message={message} />\r\n                    });\r\n                }}\r\n            >\r\n                Show snackbar\r\n            </Button>\r\n        </SubCard>\r\n    );\r\n}\r\n","import { useState } from 'react';\r\n\r\n// material-ul\r\nimport { Button, Checkbox } from '@mui/material';\r\n\r\n// third-party\r\nimport { enqueueSnackbar } from 'notistack';\r\n\r\n// project import\r\nimport SubCard from 'ui-component/cards/SubCard';\r\nimport { handlerDense } from 'store/slices/snackbar';\r\nimport { dispatch } from 'store';\r\n\r\n// ==============================|| NOTISTACK - DENSE ||============================== //\r\n\r\nexport default function Dense() {\r\n    const [checked, setChecked] = useState(false);\r\n\r\n    const handleChange = (event) => {\r\n        setChecked(event.target.checked);\r\n        dispatch(handlerDense({ dense: event.target.checked }));\r\n    };\r\n\r\n    return (\r\n        <SubCard title=\"Dense\">\r\n            <Checkbox checked={checked} onChange={handleChange} inputProps={{ 'aria-label': 'controlled' }} />\r\n            Dense margins\r\n            <Button variant=\"outlined\" fullWidth sx={{ marginBlockStart: 2 }} onClick={() => enqueueSnackbar('Your notification here')}>\r\n                Show snackbar\r\n            </Button>\r\n        </SubCard>\r\n    );\r\n}\r\n","// material-ul\r\nimport { Button, Stack } from '@mui/material';\r\n\r\n// third-party\r\nimport { enqueueSnackbar, useSnackbar } from 'notistack';\r\n\r\n// project import\r\nimport SubCard from 'ui-component/cards/SubCard';\r\n\r\n// ==============================|| NOTISTACK - DISMISS ||============================== //\r\n\r\nexport default function DismissSnackBar() {\r\n    const { closeSnackbar } = useSnackbar();\r\n\r\n    return (\r\n        <SubCard title=\"Dismiss Programmatically\">\r\n            <Stack flexDirection=\"row\" justifyContent=\"space-between\">\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    color=\"error\"\r\n                    sx={{ marginBlockStart: 2, marginInlineEnd: 2 }}\r\n                    onClick={() =>\r\n                        enqueueSnackbar('No connection!', {\r\n                            variant: 'error',\r\n                            persist: true,\r\n                            anchorOrigin: { horizontal: 'center', vertical: 'bottom' }\r\n                        })\r\n                    }\r\n                >\r\n                    Simulate connection loss\r\n                </Button>\r\n                <Button variant=\"outlined\" fullWidth sx={{ marginBlockStart: 2 }} onClick={() => closeSnackbar()}>\r\n                    Back Online\r\n                </Button>\r\n            </Stack>\r\n        </SubCard>\r\n    );\r\n}\r\n","import { useState } from 'react';\r\n\r\n// material-ul\r\nimport { Button, Slider } from '@mui/material';\r\n\r\n// third-party\r\nimport { enqueueSnackbar } from 'notistack';\r\n\r\n// project import\r\nimport SubCard from 'ui-component/cards/SubCard';\r\n\r\n// ==============================|| NOTISTACK - TIMEOUT ||============================== //\r\n\r\nexport default function HideDuration() {\r\n    const [value, setValue] = useState(1);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        if (typeof newValue === 'number') {\r\n            setValue(newValue);\r\n        }\r\n    };\r\n\r\n    const marks = [\r\n        {\r\n            value: 1\r\n        },\r\n        {\r\n            value: 3\r\n        },\r\n        {\r\n            value: 5\r\n        },\r\n        {\r\n            value: 7\r\n        },\r\n        {\r\n            value: 9\r\n        },\r\n        {\r\n            value: 11\r\n        }\r\n    ];\r\n\r\n    function valueLabelFormat() {\r\n        if (value === 11) return `persist`;\r\n        return `${value}s`;\r\n    }\r\n\r\n    return (\r\n        <SubCard title=\"Hide Duration\">\r\n            <Slider\r\n                value={value}\r\n                min={1}\r\n                step={2}\r\n                max={11}\r\n                valueLabelDisplay=\"on\"\r\n                marks={marks}\r\n                // eslint-disable-next-line\r\n                getAriaValueText={valueLabelFormat}\r\n                // eslint-disable-next-line\r\n                valueLabelFormat={valueLabelFormat}\r\n                onChange={handleChange}\r\n            />\r\n            <Button\r\n                variant=\"contained\"\r\n                fullWidth\r\n                sx={{ marginBlockStart: 2 }}\r\n                onClick={() => {\r\n                    if (value !== 11) {\r\n                        enqueueSnackbar('Your notification here', { autoHideDuration: value * 1000, variant: 'info' });\r\n                    } else {\r\n                        enqueueSnackbar('Your notification here', { persist: true, variant: 'info' });\r\n                    }\r\n                }}\r\n            >\r\n                Show Snackbar\r\n            </Button>\r\n        </SubCard>\r\n    );\r\n}\r\n","import { useState } from 'react';\r\n\r\n// material-ul\r\nimport { Button, FormControl, Radio, FormControlLabel, RadioGroup } from '@mui/material';\r\n\r\n// third-party\r\nimport { enqueueSnackbar } from 'notistack';\r\n\r\n// project import\r\nimport SubCard from 'ui-component/cards/SubCard';\r\n\r\nimport { dispatch } from 'store';\r\nimport { handlerIconVariants } from 'store/slices/snackbar';\r\n\r\n// ==============================|| NOTISTACK - CUSTOM ICON ||============================== //\r\n\r\nexport default function IconVariants() {\r\n    const [value, setValue] = useState('usedefault');\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <SubCard title=\"With Icons\">\r\n            <FormControl>\r\n                <RadioGroup\r\n                    row\r\n                    aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    name=\"row-radio-buttons-group\"\r\n                >\r\n                    <FormControlLabel value=\"usedefault\" control={<Radio />} label=\"Use Default\" />\r\n                    <FormControlLabel value=\"useemojis\" control={<Radio />} label=\"Use Emojis\" />\r\n                    <FormControlLabel value=\"hide\" control={<Radio />} label=\"Hide\" />\r\n                </RadioGroup>\r\n            </FormControl>\r\n            <Button\r\n                variant=\"contained\"\r\n                fullWidth\r\n                sx={{ marginBlockStart: 2 }}\r\n                onClick={() => {\r\n                    enqueueSnackbar('Your notification here', { variant: 'info' });\r\n                    dispatch(\r\n                        handlerIconVariants({\r\n                            iconVariant: value\r\n                        })\r\n                    );\r\n                }}\r\n            >\r\n                Show Snackbar\r\n            </Button>\r\n        </SubCard>\r\n    );\r\n}\r\n","import { useState } from 'react';\r\n\r\n// material-ul\r\nimport { Button, Typography, Stack } from '@mui/material';\r\n\r\n// third-party\r\nimport { enqueueSnackbar } from 'notistack';\r\n\r\n// project import\r\nimport SubCard from 'ui-component/cards/SubCard';\r\nimport { dispatch, useSelector } from 'store';\r\nimport { handlerIncrease } from 'store/slices/snackbar';\r\n\r\n// asset\r\nimport RemoveOutlinedIcon from '@mui/icons-material/RemoveOutlined';\r\nimport AddOutlinedIcon from '@mui/icons-material/AddOutlined';\r\n// ==============================|| NOTISTACK - MAXIMUM SNACKBAR ||============================== //\r\n\r\nexport default function MaxSnackbar() {\r\n    const width = { minWidth: 'auto' };\r\n\r\n    const snackbar = useSelector((state) => state.snackbar);\r\n    const [value, setValue] = useState(3);\r\n\r\n    const handlerMaxStack = () => {\r\n        enqueueSnackbar('Your notification here', { variant: 'info' });\r\n        dispatch(\r\n            handlerIncrease({\r\n                maxStack: value\r\n            })\r\n        );\r\n    };\r\n\r\n    return (\r\n        <SubCard title=\"Maximum snackbars\">\r\n            <Stack justifyContent=\"space-between\" flexDirection=\"row\">\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    sx={width}\r\n                    // eslint-disable-next-line\r\n                    disabled={snackbar.maxStack === 0 ? true : false}\r\n                    onClick={() => setValue((prev) => prev - 1)}\r\n                >\r\n                    <RemoveOutlinedIcon />\r\n                </Button>\r\n                <Typography variant=\"body1\">stack up to {value}</Typography>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    sx={width}\r\n                    // eslint-disable-next-line\r\n                    disabled={snackbar.maxStack === 4 ? true : false}\r\n                    onClick={() => setValue((prev) => prev + 1)}\r\n                >\r\n                    <AddOutlinedIcon />\r\n                </Button>\r\n            </Stack>\r\n            <Button variant=\"contained\" fullWidth sx={{ marginBlockStart: 2 }} onClick={() => handlerMaxStack()}>\r\n                Show Snackbar\r\n            </Button>\r\n        </SubCard>\r\n    );\r\n}\r\n","// material-ul\r\nimport { Button, Grid } from '@mui/material';\r\n\r\n// third-party\r\nimport { enqueueSnackbar } from 'notistack';\r\n\r\n// project import\r\nimport SubCard from 'ui-component/cards/SubCard';\r\n\r\n// ==============================|| NOTISTACK - POSTIONING ||============================== //\r\n\r\nexport default function PositioningSnackbar() {\r\n    return (\r\n        <SubCard title=\"Positioning\">\r\n            <Grid container spacing={2}>\r\n                <Grid item>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        onClick={() =>\r\n                            enqueueSnackbar('This is default message.', {\r\n                                anchorOrigin: {\r\n                                    vertical: 'top',\r\n                                    horizontal: 'left'\r\n                                },\r\n                                variant: 'info'\r\n                            })\r\n                        }\r\n                    >\r\n                        Top-Left\r\n                    </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        onClick={() =>\r\n                            enqueueSnackbar('his is success message', {\r\n                                anchorOrigin: {\r\n                                    vertical: 'top',\r\n                                    horizontal: 'center'\r\n                                },\r\n                                variant: 'info'\r\n                            })\r\n                        }\r\n                    >\r\n                        Top-Center\r\n                    </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        onClick={() =>\r\n                            enqueueSnackbar('This is warning message', {\r\n                                anchorOrigin: {\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right'\r\n                                },\r\n                                variant: 'info'\r\n                            })\r\n                        }\r\n                    >\r\n                        Top-right\r\n                    </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        onClick={() =>\r\n                            enqueueSnackbar('This is info message', {\r\n                                anchorOrigin: {\r\n                                    vertical: 'bottom',\r\n                                    horizontal: 'left'\r\n                                },\r\n                                variant: 'info'\r\n                            })\r\n                        }\r\n                    >\r\n                        Bottom-left\r\n                    </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        onClick={() =>\r\n                            enqueueSnackbar('This is info message', {\r\n                                anchorOrigin: {\r\n                                    vertical: 'bottom',\r\n                                    horizontal: 'center'\r\n                                },\r\n                                variant: 'info'\r\n                            })\r\n                        }\r\n                    >\r\n                        Bottom-center\r\n                    </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        onClick={() =>\r\n                            enqueueSnackbar('This is info message', {\r\n                                anchorOrigin: {\r\n                                    vertical: 'bottom',\r\n                                    horizontal: 'right'\r\n                                },\r\n                                variant: 'info'\r\n                            })\r\n                        }\r\n                    >\r\n                        Bottom-Right\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </SubCard>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\n// material-ul\r\nimport { Button, Stack, Checkbox } from '@mui/material';\r\n\r\n// third-party\r\nimport { enqueueSnackbar } from 'notistack';\r\n\r\n// project import\r\nimport SubCard from 'ui-component/cards/SubCard';\r\n\r\n// ==============================|| NOTISTACK - PREVENT DUPLICATE ||============================== //\r\n\r\nexport default function PreventDuplicate() {\r\n    const [checked, setChecked] = React.useState(true);\r\n\r\n    const handleChangeCheck = (event) => {\r\n        setChecked(event.target.checked);\r\n    };\r\n\r\n    return (\r\n        <SubCard title=\"Prevent Duplicate\">\r\n            <Stack flexDirection=\"row\" gap={1} justifyContent=\"center\" alignItems=\"center\" flexWrap=\"wrap\">\r\n                <Checkbox checked={checked} onChange={handleChangeCheck} inputProps={{ 'aria-label': 'controlled' }} />\r\n                Prevent duplicate\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    sx={{ marginBlockStart: 2 }}\r\n                    onClick={() =>\r\n                        enqueueSnackbar('You only see me once.', {\r\n                            // eslint-disable-next-line\r\n                            preventDuplicate: checked ? true : false,\r\n                            variant: 'info'\r\n                        })\r\n                    }\r\n                >\r\n                    Show snackbar\r\n                </Button>\r\n            </Stack>\r\n        </SubCard>\r\n    );\r\n}\r\n","// material-ui\r\nimport { Button } from '@mui/material';\r\n\r\n// third-party\r\nimport { enqueueSnackbar, useSnackbar } from 'notistack';\r\n\r\n// project import\r\nimport SubCard from 'ui-component/cards/SubCard';\r\n\r\n// ==============================|| NOTISTACK - ACTION BUTTONS ||============================== //\r\n\r\nexport default function SnackBarAction() {\r\n    const { closeSnackbar } = useSnackbar();\r\n    const actionTask = (snackbarId) => (\r\n        <>\r\n            <Button\r\n                variant=\"text\"\r\n                onClick={() => {\r\n                    // eslint-disable-next-line\r\n                    alert(`I belong to snackbar with id ${snackbarId}`);\r\n                }}\r\n            >\r\n                Undo\r\n            </Button>\r\n            <Button variant=\"text\" onClick={() => closeSnackbar(snackbarId)}>\r\n                Dismiss\r\n            </Button>\r\n        </>\r\n    );\r\n\r\n    return (\r\n        <SubCard title=\"With Action\">\r\n            <Button\r\n                variant=\"contained\"\r\n                fullWidth\r\n                sx={{ marginBlockStart: 2 }}\r\n                onClick={() => enqueueSnackbar('Your notification here', { action: (key) => actionTask(key) })}\r\n            >\r\n                Show Snackbar\r\n            </Button>\r\n        </SubCard>\r\n    );\r\n}\r\n","import { useState } from 'react';\r\n\r\n// material-ul\r\nimport { Button, FormControl, Radio, FormControlLabel, RadioGroup, Grow, Slide, Fade, Zoom } from '@mui/material';\r\n\r\n// third-party\r\nimport { enqueueSnackbar } from 'notistack';\r\n\r\n// project import\r\nimport SubCard from 'ui-component/cards/SubCard';\r\n\r\n// ==============================|| NOTISTACK - TRANSITIONS ||============================== //\r\n\r\nexport default function TransitionBar() {\r\n    const [value, setValue] = useState('slide');\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n    };\r\n\r\n    const handleClick = () => {\r\n        switch (value) {\r\n            case 'slide':\r\n                enqueueSnackbar('Your notification here', { TransitionComponent: Slide, variant: 'info' });\r\n                break;\r\n            case 'grow':\r\n                enqueueSnackbar('Your notification here', { TransitionComponent: Grow, variant: 'info' });\r\n                break;\r\n            case 'fade':\r\n                enqueueSnackbar('Your notification here', { TransitionComponent: Fade, variant: 'info' });\r\n                break;\r\n            case 'zoom':\r\n                enqueueSnackbar('Your notification here', { TransitionComponent: Zoom, variant: 'info' });\r\n                break;\r\n            default:\r\n                enqueueSnackbar('Your notification here', { TransitionComponent: Slide, variant: 'info' });\r\n                break;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <SubCard title=\"Animation\">\r\n            <FormControl>\r\n                <RadioGroup\r\n                    row\r\n                    aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    name=\"row-radio-buttons-group\"\r\n                >\r\n                    <FormControlLabel value=\"slide\" control={<Radio />} label=\"Slide\" />\r\n                    <FormControlLabel value=\"grow\" control={<Radio />} label=\"Grow\" />\r\n                    <FormControlLabel value=\"fade\" control={<Radio />} label=\"Fade\" />\r\n                    <FormControlLabel value=\"zoom\" control={<Radio />} label=\"Zoom\" />\r\n                </RadioGroup>\r\n            </FormControl>\r\n            <Button variant=\"contained\" fullWidth sx={{ marginBlockStart: 2 }} onClick={() => handleClick()}>\r\n                Show Snackbar\r\n            </Button>\r\n        </SubCard>\r\n    );\r\n}\r\n","// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Button, Grid, Typography } from '@mui/material';\r\n\r\n// project imports\r\nimport SubCard from 'ui-component/cards/SubCard';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SecondaryAction from 'ui-component/cards/CardSecondaryAction';\r\nimport { useDispatch } from 'store';\r\nimport { gridSpacing } from 'store/constant';\r\nimport { openSnackbar } from 'store/slices/snackbar';\r\nimport {\r\n    ColorVariants,\r\n    CustomComponent,\r\n    Dense,\r\n    DismissSnackBar,\r\n    HideDuration,\r\n    IconVariants,\r\n    MaxSnackbar,\r\n    PositioningSnackbar,\r\n    PreventDuplicate,\r\n    SnackBarAction,\r\n    TransitionBar\r\n} from 'ui-component/extended/notistack';\r\n\r\n// ==============================|| UI SNACKBAR ||============================== //\r\n\r\nconst UISnackbar = () => {\r\n    const theme = useTheme();\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <MainCard title=\"Snackbar\" secondary={<SecondaryAction link=\"https://next.material-ui.com/components/snackbars/\" />}>\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12} sm={6} md={4}>\r\n                    <SubCard title=\"Basic Snackbar\">\r\n                        <Grid container spacing={3} justifyContent=\"center\" alignItems=\"center\">\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"outlined\"\r\n                                    onClick={() =>\r\n                                        dispatch(\r\n                                            openSnackbar({\r\n                                                open: true,\r\n                                                message: 'This is default message',\r\n                                                variant: 'alert',\r\n                                                close: false\r\n                                            })\r\n                                        )\r\n                                    }\r\n                                >\r\n                                    Default\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button\r\n                                    sx={{\r\n                                        color: theme.palette.error.dark,\r\n                                        borderColor: theme.palette.error.dark,\r\n                                        '&:hover': { background: theme.palette.error.main + 20, borderColor: theme.palette.error.dark }\r\n                                    }}\r\n                                    variant=\"outlined\"\r\n                                    onClick={() =>\r\n                                        dispatch(\r\n                                            openSnackbar({\r\n                                                open: true,\r\n                                                message: 'This is error message',\r\n                                                variant: 'alert',\r\n                                                alert: {\r\n                                                    color: 'error'\r\n                                                },\r\n                                                close: false\r\n                                            })\r\n                                        )\r\n                                    }\r\n                                >\r\n                                    Error\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"outlined\"\r\n                                    sx={{\r\n                                        color: theme.palette.success.dark,\r\n                                        borderColor: theme.palette.success.dark,\r\n                                        '&:hover': { background: theme.palette.success.main + 20, borderColor: theme.palette.success.dark }\r\n                                    }}\r\n                                    onClick={() =>\r\n                                        dispatch(\r\n                                            openSnackbar({\r\n                                                open: true,\r\n                                                message: 'This is success message',\r\n                                                variant: 'alert',\r\n                                                alert: {\r\n                                                    color: 'success'\r\n                                                },\r\n                                                close: false\r\n                                            })\r\n                                        )\r\n                                    }\r\n                                >\r\n                                    Success\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"outlined\"\r\n                                    sx={{\r\n                                        color: theme.palette.warning.dark,\r\n                                        borderColor: theme.palette.warning.dark,\r\n                                        '&:hover': { background: theme.palette.warning.main + 20, borderColor: theme.palette.warning.dark }\r\n                                    }}\r\n                                    onClick={() =>\r\n                                        dispatch(\r\n                                            openSnackbar({\r\n                                                open: true,\r\n                                                message: 'This is warning message',\r\n                                                variant: 'alert',\r\n                                                alert: {\r\n                                                    color: 'warning'\r\n                                                },\r\n                                                close: false\r\n                                            })\r\n                                        )\r\n                                    }\r\n                                >\r\n                                    Warning\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </SubCard>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6} md={4}>\r\n                    <SubCard title=\"With Close\">\r\n                        <Grid container spacing={3} justifyContent=\"center\" alignItems=\"center\">\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"outlined\"\r\n                                    onClick={() =>\r\n                                        dispatch(\r\n                                            openSnackbar({\r\n                                                open: true,\r\n                                                message: 'This is default message',\r\n                                                variant: 'alert'\r\n                                            })\r\n                                        )\r\n                                    }\r\n                                >\r\n                                    Default\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button\r\n                                    sx={{\r\n                                        color: theme.palette.error.dark,\r\n                                        borderColor: theme.palette.error.dark,\r\n                                        '&:hover': { background: theme.palette.error.main + 20, borderColor: theme.palette.error.dark }\r\n                                    }}\r\n                                    variant=\"outlined\"\r\n                                    onClick={() =>\r\n                                        dispatch(\r\n                                            openSnackbar({\r\n                                                open: true,\r\n                                                message: 'This is error message',\r\n                                                variant: 'alert',\r\n                                                alert: {\r\n                                                    color: 'error'\r\n                                                }\r\n                                            })\r\n                                        )\r\n                                    }\r\n                                >\r\n                                    Error\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"outlined\"\r\n                                    sx={{\r\n                                        color: theme.palette.success.dark,\r\n                                        borderColor: theme.palette.success.dark,\r\n                                        '&:hover': { background: theme.palette.success.main + 20, borderColor: theme.palette.success.dark }\r\n                                    }}\r\n                                    onClick={() =>\r\n                                        dispatch(\r\n                                            openSnackbar({\r\n                                                open: true,\r\n                                                message: 'This is success message',\r\n                                                variant: 'alert',\r\n                                                alert: {\r\n                                                    color: 'success'\r\n                                                }\r\n                                            })\r\n                                        )\r\n                                    }\r\n                                >\r\n                                    Success\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"outlined\"\r\n                                    sx={{\r\n                                        color: theme.palette.warning.dark,\r\n                                        borderColor: theme.palette.warning.dark,\r\n                                        '&:hover': { background: theme.palette.warning.main + 20, borderColor: theme.palette.warning.dark }\r\n                                    }}\r\n                                    onClick={() =>\r\n                                        dispatch(\r\n                                            openSnackbar({\r\n                                                open: true,\r\n                                                message: 'This is warning message',\r\n                                                variant: 'alert',\r\n                                                alert: {\r\n                                                    color: 'warning'\r\n                                                }\r\n                                            })\r\n                                        )\r\n                                    }\r\n                                >\r\n                                    Warning\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </SubCard>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6} md={4}>\r\n                    <SubCard title=\"With Close + Action\">\r\n                        <Grid container spacing={3} justifyContent=\"center\" alignItems=\"center\">\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"outlined\"\r\n                                    onClick={() =>\r\n                                        dispatch(\r\n                                            openSnackbar({\r\n                                                open: true,\r\n                                                message: 'This is default message',\r\n                                                variant: 'alert',\r\n                                                actionButton: true\r\n                                            })\r\n                                        )\r\n                                    }\r\n                                >\r\n                                    Default\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button\r\n                                    sx={{\r\n                                        color: theme.palette.error.dark,\r\n                                        borderColor: theme.palette.error.dark,\r\n                                        '&:hover': { background: theme.palette.error.main + 20, borderColor: theme.palette.error.dark }\r\n                                    }}\r\n                                    variant=\"outlined\"\r\n                                    onClick={() =>\r\n                                        dispatch(\r\n                                            openSnackbar({\r\n                                                open: true,\r\n                                                message: 'This is error message',\r\n                                                variant: 'alert',\r\n                                                alert: {\r\n                                                    color: 'error'\r\n                                                },\r\n                                                actionButton: true\r\n                                            })\r\n                                        )\r\n                                    }\r\n                                >\r\n                                    Error\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"outlined\"\r\n                                    sx={{\r\n                                        color: theme.palette.success.dark,\r\n                                        borderColor: theme.palette.success.dark,\r\n                                        '&:hover': { background: theme.palette.success.main + 20, borderColor: theme.palette.success.dark }\r\n                                    }}\r\n                                    onClick={() =>\r\n                                        dispatch(\r\n                                            openSnackbar({\r\n                                                open: true,\r\n                                                message: 'This is success message',\r\n                                                variant: 'alert',\r\n                                                alert: {\r\n                                                    color: 'success'\r\n                                                },\r\n                                                actionButton: true\r\n                                            })\r\n                                        )\r\n                                    }\r\n                                >\r\n                                    Success\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"outlined\"\r\n                                    sx={{\r\n                                        color: theme.palette.warning.dark,\r\n                                        borderColor: theme.palette.warning.dark,\r\n                                        '&:hover': { background: theme.palette.warning.main + 20, borderColor: theme.palette.warning.dark }\r\n                                    }}\r\n                                    onClick={() =>\r\n                                        dispatch(\r\n                                            openSnackbar({\r\n                                                open: true,\r\n                                                message: 'This is warning message',\r\n                                                variant: 'alert',\r\n                                                alert: {\r\n                                                    color: 'warning'\r\n                                                },\r\n                                                actionButton: true\r\n                                            })\r\n                                        )\r\n                                    }\r\n                                >\r\n                                    Warning\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </SubCard>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} md={6}>\r\n                    <SubCard title=\"Snackbar Position\">\r\n                        <Grid container spacing={2} justifyContent=\"center\">\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    onClick={() =>\r\n                                        dispatch(\r\n                                            openSnackbar({\r\n                                                open: true,\r\n                                                anchorOrigin: { vertical: 'top', horizontal: 'left' },\r\n                                                message: 'This is an top-left message!'\r\n                                            })\r\n                                        )\r\n                                    }\r\n                                >\r\n                                    Top-Left\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    onClick={() =>\r\n                                        dispatch(\r\n                                            openSnackbar({\r\n                                                open: true,\r\n                                                anchorOrigin: { vertical: 'top', horizontal: 'center' },\r\n                                                message: 'This is an top-center message!'\r\n                                            })\r\n                                        )\r\n                                    }\r\n                                >\r\n                                    Top-Center\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    onClick={() =>\r\n                                        dispatch(\r\n                                            openSnackbar({\r\n                                                open: true,\r\n                                                anchorOrigin: { vertical: 'top', horizontal: 'right' },\r\n                                                message: 'This is an top-right message!'\r\n                                            })\r\n                                        )\r\n                                    }\r\n                                >\r\n                                    Top-Right\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    onClick={() =>\r\n                                        dispatch(\r\n                                            openSnackbar({\r\n                                                open: true,\r\n                                                anchorOrigin: { vertical: 'bottom', horizontal: 'right' },\r\n                                                message: 'This is an bottom-right message!'\r\n                                            })\r\n                                        )\r\n                                    }\r\n                                >\r\n                                    Bottom-Right\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    onClick={() =>\r\n                                        dispatch(\r\n                                            openSnackbar({\r\n                                                open: true,\r\n                                                anchorOrigin: { vertical: 'bottom', horizontal: 'center' },\r\n                                                message: 'This is an bottom-center message!'\r\n                                            })\r\n                                        )\r\n                                    }\r\n                                >\r\n                                    Bottom-Center\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    onClick={() =>\r\n                                        dispatch(\r\n                                            openSnackbar({\r\n                                                open: true,\r\n                                                anchorOrigin: { vertical: 'bottom', horizontal: 'left' },\r\n                                                message: 'This is an bottom-left message!'\r\n                                            })\r\n                                        )\r\n                                    }\r\n                                >\r\n                                    Bottom-Left\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </SubCard>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <SubCard title=\"Snackbar Trasition\">\r\n                        <Grid container spacing={2} justifyContent=\"center\">\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    onClick={() =>\r\n                                        dispatch(\r\n                                            openSnackbar({\r\n                                                open: true,\r\n                                                message: 'This is an fade message!',\r\n                                                transition: 'Fade'\r\n                                            })\r\n                                        )\r\n                                    }\r\n                                >\r\n                                    Default/Fade\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    onClick={() =>\r\n                                        dispatch(\r\n                                            openSnackbar({\r\n                                                open: true,\r\n                                                message: 'This is an slide-left message!',\r\n                                                transition: 'SlideLeft'\r\n                                            })\r\n                                        )\r\n                                    }\r\n                                >\r\n                                    Slide Left\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    onClick={() =>\r\n                                        dispatch(\r\n                                            openSnackbar({\r\n                                                open: true,\r\n                                                message: 'This is an slide-up message!',\r\n                                                transition: 'SlideUp'\r\n                                            })\r\n                                        )\r\n                                    }\r\n                                >\r\n                                    Slide Up\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    onClick={() =>\r\n                                        dispatch(\r\n                                            openSnackbar({\r\n                                                open: true,\r\n                                                message: 'This is an slide-right message!',\r\n                                                transition: 'SlideRight'\r\n                                            })\r\n                                        )\r\n                                    }\r\n                                >\r\n                                    Slide Right\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    onClick={() =>\r\n                                        dispatch(\r\n                                            openSnackbar({\r\n                                                open: true,\r\n                                                message: 'This is an slide-down message!',\r\n                                                transition: 'SlideDown'\r\n                                            })\r\n                                        )\r\n                                    }\r\n                                >\r\n                                    Slide Down\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    onClick={() =>\r\n                                        dispatch(\r\n                                            openSnackbar({\r\n                                                open: true,\r\n                                                message: 'This is an grow message!',\r\n                                                transition: 'Grow'\r\n                                            })\r\n                                        )\r\n                                    }\r\n                                >\r\n                                    Grow\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </SubCard>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h5\" sx={{ mt: 2 }}>\r\n                        Extended - Notistack\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} lg={6}>\r\n                    <ColorVariants />\r\n                </Grid>\r\n                <Grid item xs={12} lg={6}>\r\n                    <MaxSnackbar />\r\n                </Grid>\r\n                <Grid item xs={12} lg={6}>\r\n                    <IconVariants />\r\n                </Grid>\r\n                <Grid item xs={12} lg={6}>\r\n                    <HideDuration />\r\n                </Grid>\r\n                <Grid item xs={12} lg={6}>\r\n                    <SnackBarAction />\r\n                </Grid>\r\n                <Grid item xs={12} lg={6}>\r\n                    <DismissSnackBar />\r\n                </Grid>\r\n                <Grid item xs={12} lg={6}>\r\n                    <PreventDuplicate />\r\n                </Grid>\r\n                <Grid item xs={12} lg={6}>\r\n                    <TransitionBar />\r\n                </Grid>\r\n                <Grid item xs={12} lg={6}>\r\n                    <Dense />\r\n                </Grid>\r\n                <Grid item xs={12} lg={6}>\r\n                    <CustomComponent />\r\n                </Grid>\r\n                <Grid item xs={12} lg={6}>\r\n                    <PositioningSnackbar />\r\n                </Grid>\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default UISnackbar;\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'AddOutlined');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckCircle');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z\"\n}), 'CloseOutlined');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M7.41 8.59 12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z\"\n}), 'KeyboardArrowDownOutlined');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'RemoveOutlined');\nexports.default = _default;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium']);\nexport default checkboxClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`, `size${capitalize(size)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, styles[`size${capitalize(ownerState.size)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${ownerState.color === 'default' ? theme.vars.palette.action.activeChannel : theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  }\n}));\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n  const {\n      checkedIcon = defaultCheckedIcon,\n      color = 'primary',\n      icon: iconProp = defaultIcon,\n      indeterminate = false,\n      indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n      inputProps,\n      size = 'medium',\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;"],"names":["_ref","title","link","icon","theme","useTheme","_jsx","Tooltip","placement","children","_jsxs","ButtonBase","disableRipple","Avatar","component","Link","href","target","alt","size","color","outline","width","height","viewBox","fill","xmlns","clipPath","d","palette","primary","main","id","transform","SubCard","React","ref","content","contentClass","darkTitle","secondary","sx","contentSX","others","Card","border","borderColor","mode","dark","light","grey","boxShadow","CardHeader","p","Typography","variant","action","Divider","opacity","CardContent","className","defaultProps","ColorVariants","Grid","container","spacing","item","Button","backgroundColor","onClick","enqueueSnackbar","SnackbarBox","styled","SnackbarContent","minWidth","CustomNotistack","forwardRef","props","closeSnackbar","useSnackbar","expanded","setExpanded","useState","handleExpandClick","useCallback","prevState","handleDismiss","bgcolor","CardActions","padding","justifyContent","message","Box","marginLeft","IconButton","transition","KeyboardArrowDownOutlinedIcon","CloseOutlinedIcon","Collapse","in","timeout","unmountOnExit","Paper","borderTopLeftRadius","borderTopRightRadius","gutterBottom","startIcon","CheckCircleIcon","fontSize","CustomComponent","fullWidth","marginBlockStart","anchorOrigin","vertical","horizontal","key","Dense","checked","setChecked","Checkbox","onChange","event","dispatch","handlerDense","dense","inputProps","DismissSnackBar","Stack","flexDirection","marginInlineEnd","persist","HideDuration","value","setValue","valueLabelFormat","Slider","min","step","max","valueLabelDisplay","marks","getAriaValueText","handleChange","newValue","autoHideDuration","IconVariants","FormControl","RadioGroup","row","name","FormControlLabel","control","Radio","label","handlerIconVariants","iconVariant","MaxSnackbar","snackbar","useSelector","state","disabled","maxStack","prev","RemoveOutlinedIcon","AddOutlinedIcon","handlerIncrease","PositioningSnackbar","PreventDuplicate","gap","alignItems","flexWrap","preventDuplicate","SnackBarAction","actionTask","snackbarId","_Fragment","alert","TransitionBar","handleClick","TransitionComponent","Slide","Grow","Fade","Zoom","UISnackbar","useDispatch","MainCard","SecondaryAction","gridSpacing","xs","sm","md","openSnackbar","open","close","error","background","success","warning","actionButton","mt","lg","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","createSvgIcon","getCheckboxUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CheckboxRoot","SwitchBase","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","styles","ownerState","root","indeterminate","capitalize","_extends","vars","text","activeChannel","mainChannel","hoverOpacity","alpha","active","checkboxClasses","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","inProps","_icon$props$fontSize","_indeterminateIcon$pr","useDefaultProps","checkedIcon","iconProp","indeterminateIcon","indeterminateIconProp","other","_objectWithoutPropertiesLoose","classes","slots","composedClasses","composeClasses","useUtilityClasses","type","clsx"],"sourceRoot":""}