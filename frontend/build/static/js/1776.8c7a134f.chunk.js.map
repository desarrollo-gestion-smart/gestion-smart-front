{"version":3,"file":"static/js/1776.8c7a134f.chunk.js","mappings":"2NAUA,MAAMA,EAAUC,EAAAA,YACZ,CAAAC,EAAuGC,KAAS,IAA/G,SAAEC,EAAQ,QAAEC,EAAO,aAAEC,EAAY,UAAEC,EAAS,UAAEC,EAAS,GAAEC,EAAK,CAAC,EAAC,UAAEC,EAAY,CAAC,EAAC,MAAEC,KAAUC,GAAQV,EACjG,MAAMW,GAAQC,EAAAA,EAAAA,KAEd,OACIC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CACDb,IAAKA,EACLM,GAAI,CACAQ,OAAQ,YACRC,YAAoC,SAAvBL,EAAMM,QAAQC,KAAkBP,EAAMM,QAAQE,KAAKC,MAAQ,GAAKT,EAAMM,QAAQI,KAAK,KAChG,SAAU,CACNC,UAAkC,SAAvBX,EAAMM,QAAQC,KAAkB,qCAAuC,sCAEnFX,MAEHG,EAAMR,SAAA,EAGRG,GAAaI,IACXc,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACjB,GAAI,CAAEkB,EAAG,KAAOhB,OAAOc,EAAAA,EAAAA,KAACG,EAAAA,EAAU,CAACC,QAAQ,KAAIzB,SAAEO,IAAqBmB,OAAQtB,IAE7FD,GAAaI,IACVc,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACjB,GAAI,CAAEkB,EAAG,KAAOhB,OAAOc,EAAAA,EAAAA,KAACG,EAAAA,EAAU,CAACC,QAAQ,KAAIzB,SAAEO,IAAqBmB,OAAQtB,IAI7FG,IACGc,EAAAA,EAAAA,KAACM,EAAAA,EAAO,CACJtB,GAAI,CACAuB,QAAS,EACTd,YAAoC,SAAvBL,EAAMM,QAAQC,KAAkBP,EAAMM,QAAQE,KAAKC,MAAQ,GAAKT,EAAMM,QAAQI,KAAK,QAM3GlB,IACGoB,EAAAA,EAAAA,KAACQ,EAAAA,EAAW,CAACxB,GAAI,CAAEkB,EAAG,OAAQjB,GAAawB,UAAW5B,GAAgB,GAAGF,SACpEA,KAGPC,GAAWD,IACV,IAgBnBJ,EAAQmC,aAAe,CACnB9B,SAAS,GAGb,S,yTC5DA,MAAM+B,EAAc,CAChB,CACIC,MAAO,QACPC,MAAO,eACPC,KAAMC,EAAAA,GAEV,CACIH,MAAO,OACPC,MAAO,eACPC,KAAME,EAAAA,GAEV,CACIJ,MAAO,MACPC,MAAO,cACPC,KAAMG,EAAAA,GAEV,CACIL,MAAO,SACPC,MAAO,WACPC,KAAMI,EAAAA,IAoEd,EA9DgBzC,IAAsF,IAArF,KAAE0C,EAAI,KAAEC,EAAI,YAAEC,EAAW,YAAEC,EAAW,aAAEC,EAAY,aAAEC,KAAiBrC,GAAQV,EAC5F,MAAMgD,GAAUC,EAAAA,EAAAA,IAAetC,GAAUA,EAAMuC,YAAYC,KAAK,SACzDC,EAAeC,IAAoBC,EAAAA,EAAAA,UAASpB,GAUnD,OARAqB,EAAAA,EAAAA,YAAU,KACN,IAAIC,EAAYtB,EACZc,IACAQ,EAAYtB,EAAYuB,QAAQC,GAA8B,iBAAlBA,EAAQtB,OAA8C,iBAAlBsB,EAAQtB,SAE5FiB,EAAiBG,EAAU,GAC5B,CAACR,KAGAnC,EAAAA,EAAAA,MAAC8C,EAAAA,GAAI,CAACC,WAAW,SAASC,WAAS,EAACC,eAAe,gBAAgBC,QAAS,KAAOrD,EAAQH,GAAI,CAAEyD,GAAI,GAAI9D,SAAA,EACrGqB,EAAAA,EAAAA,KAACoC,EAAAA,GAAI,CAACM,MAAI,EAAA/D,UACNqB,EAAAA,EAAAA,KAAC2C,EAAAA,EAAM,CAACvC,QAAQ,WAAWwC,QAASrB,EAAa5C,SAAC,aAItDqB,EAAAA,EAAAA,KAACoC,EAAAA,GAAI,CAACM,MAAI,EAAA/D,UACNW,EAAAA,EAAAA,MAACuD,EAAAA,EAAK,CAACC,UAAU,MAAMT,WAAW,SAASG,QAAS,EAAE7D,SAAA,EAClDqB,EAAAA,EAAAA,KAAC+C,EAAAA,EAAU,CAACH,QAAStB,EAAa0B,KAAK,QAAQ,aAAW,YAAWrE,UACjEqB,EAAAA,EAAAA,KAACiD,EAAAA,EAAe,OAEpBjD,EAAAA,EAAAA,KAACG,EAAAA,EAAU,CAACC,QAAQ,KAAK8C,MAAM,cAAavE,UACvCwE,EAAAA,EAAAA,GAAOhC,EAAM,gBAElBnB,EAAAA,EAAAA,KAAC+C,EAAAA,EAAU,CAACH,QAASvB,EAAa2B,KAAK,QAAQ,aAAW,aAAYrE,UAClEqB,EAAAA,EAAAA,KAACoD,EAAAA,EAAgB,YAI7BpD,EAAAA,EAAAA,KAACoC,EAAAA,GAAI,CAACM,MAAI,EAAA/D,UACNqB,EAAAA,EAAAA,KAACqD,EAAAA,EAAW,CAACjD,QAAQ,WAAW,aAAW,wBAAuBzB,SAC7DkD,EAAcyB,KAAKC,IAChB,MAAMC,EAAOD,EAAWzC,KACxB,OACId,EAAAA,EAAAA,KAACyD,EAAAA,EAAO,CAACvE,MAAOqE,EAAW3C,MAAMjC,UAC7BqB,EAAAA,EAAAA,KAAC2C,EAAAA,EAAM,CACHe,kBAAgB,EAChBtD,QAASmD,EAAW1C,QAAUO,EAAO,YAAc,WACnDwB,QAASA,IAAMpB,EAAa+B,EAAW1C,OAAOlC,UAE9CqB,EAAAA,EAAAA,KAACwD,EAAI,CAACG,OAAO,IAAIX,KAAK,YANSO,EAAW1C,MAQxC,UAKvB,E,wBCpFf,MA+FA,GA/F2B+C,E,SAAAA,IAAO,MAAPA,EAAcnF,IAAA,IAAC,MAAEW,GAAOX,EAAA,MAAM,CAErD,wBAAyB,CACrBoF,QAAS,QAIb,QAAS,CACL,wBAAyB,EACzB,oBAAqBzE,EAAMM,QAAQoE,QACnC,+BAAgC,OAChC,sBAA8C,SAAvB1E,EAAMM,QAAQC,KAAkBP,EAAMM,QAAQE,KAAK,KAAOR,EAAMM,QAAQqE,QAAQlE,MACvG,4BAA6B,OAC7B,0BAA2BT,EAAMM,QAAQqE,QAAQnE,KACjD,2BAA4BR,EAAMM,QAAQsE,MAAMC,KAChDf,MAAO9D,EAAMM,QAAQwE,KAAKH,QAC1BI,WAAY/E,EAAMgF,WAAWD,YAIjC,4BAA6B,CACzBN,QAAS,OACT,2BAA4B,CACxBQ,UAAW,SACXC,UAAW,GACXC,aAAc,KAKtB,4BAA6B,CACzBC,gBAAwC,SAAvBpF,EAAMM,QAAQC,KAAkBP,EAAMM,QAAQE,KAAKqE,KAAO7E,EAAMM,QAAQI,KAAK,KAGlG,oCAAqC,CACjCoD,MAAO9D,EAAMM,QAAQI,KAAK,KAC1B2E,QAAS,IAEb,gCAAiC,CAC7BC,UAAW,QAIf,yGAA0G,CACtGC,WAAY,EACZJ,aAAc,EACdK,aAAc,OAGlB,yGAA0G,CACtGD,WAAY,EACZJ,aAAc,EACdK,aAAc,OAGlB,+BAAgC,CAC5BH,QAAS,EACTI,YAAa,GAIjB,yBAA0B,CACtBrF,OAAQ,OACRoF,aAAc,QAGlB,0CAA2C,CACvCJ,gBAAwC,SAAvBpF,EAAMM,QAAQC,KAAkBP,EAAMM,QAAQE,KAAK,KAAOR,EAAMM,QAAQI,KAAK,KAC9FgF,uBAAwB,OACxBC,wBAAyB,QAG7B,2BAA4B,CACxBN,QAAS,GACTO,oBAAqB,OACrBC,qBAAsB,OACtBT,gBAAwC,SAAvBpF,EAAMM,QAAQC,KAAkBP,EAAMM,QAAQE,KAAK,KAAOR,EAAMM,QAAQI,KAAK,KAC9FoD,MAA8B,SAAvB9D,EAAMM,QAAQC,KAAkBP,EAAMM,QAAQE,KAAKC,MAAQT,EAAMM,QAAQwE,KAAKH,SAIzF,4CAA6C,CACzCS,gBAAwC,SAAvBpF,EAAMM,QAAQC,KAAkBP,EAAMM,QAAQE,KAAKqE,KAAO7E,EAAMM,QAAQI,KAAK,MAGlG,gCAAiC,CAC7B0E,gBAAwC,SAAvBpF,EAAMM,QAAQC,KAAkBP,EAAMM,QAAQE,KAAK,KAAOR,EAAMM,QAAQI,KAAK,MAGlG,oHAAqH,CACjH2E,QAAS,EACTS,OAAQ,GAEf,I,sECpED,MAoEA,EApEiBC,KACb,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,QAAO,OACpBC,EAASC,IAAc1D,EAAAA,EAAAA,WAAS,IAGhC2D,EAAcC,IAAmB5D,EAAAA,EAAAA,WAAS,IAE1C6D,EAAQC,IAAa9D,EAAAA,EAAAA,UAAS,IAC/B+D,GAAgBC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,WAWnD,OATAjE,EAAAA,EAAAA,YAAU,KACNoD,GAASc,EAAAA,EAAAA,OAAaC,MAAK,IAAMV,GAAW,IAAO,GAEpD,KAEHzD,EAAAA,EAAAA,YAAU,KACN6D,EAAUC,EAAcF,OAAO,GAChC,CAACE,IAEAN,GAAgBxF,EAAAA,EAAAA,KAACoG,EAAAA,EAAM,IAEvBV,GAEI1F,EAAAA,EAAAA,KAACqG,EAAAA,EAAQ,CAACnH,MAAM,mBAAeP,UAC3BqB,EAAAA,EAAAA,KAACsG,EAAAA,EAAG,CACAzC,QAAQ,OACRxB,WAAW,SACXE,eAAe,SACfgE,OAAO,QACPvH,GAAI,CACAwF,gBAAiB,UACjBI,aAAc,EACdP,UAAW,UACb1F,UAEFqB,EAAAA,EAAAA,KAACG,EAAAA,EAAU,CAACC,QAAQ,KAAK8C,MAAM,UAASvE,SAAC,oCASrDqB,EAAAA,EAAAA,KAACqG,EAAAA,EAAQ,CACLnH,MAAM,iBACNH,WACIO,EAAAA,EAAAA,MAACqD,EAAAA,EAAM,CAACO,MAAM,YAAY9C,QAAQ,YAAYoG,SAAUd,EAAa/G,SAAA,EACjEqB,EAAAA,EAAAA,KAACyG,EAAAA,EAAmB,CAACC,SAAS,QAAQ1H,GAAI,CAAE2H,GAAI,OAAU,mBAGjEhI,UAEDW,EAAAA,EAAAA,MAACsH,EAAc,CAAAjI,SAAA,EACXqB,EAAAA,EAAAA,KAAC6G,EAAO,KACR7G,EAAAA,EAAAA,KAACzB,EAAAA,EAAO,CAAAI,UACJqB,EAAAA,EAAAA,KAAC8G,EAAAA,EAAY,CACTC,QAAS,CAACC,EAAAA,EAAYC,EAAAA,EAAeC,EAAAA,EAAgBC,EAAAA,EAAgBC,EAAAA,IACrExB,OAAQA,EACRlH,IAAK4G,UAIV,C","sources":["ui-component/cards/SubCard.js","views/application/calendar/Toolbar.js","views/application/calendar/CalendarStyled.js","views/application/calendar/index.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Card, CardContent, CardHeader, Divider, Typography } from '@mui/material';\r\n\r\n// ==============================|| CUSTOM SUB CARD ||============================== //\r\n\r\nconst SubCard = React.forwardRef(\r\n    ({ children, content, contentClass, darkTitle, secondary, sx = {}, contentSX = {}, title, ...others }, ref) => {\r\n        const theme = useTheme();\r\n\r\n        return (\r\n            <Card\r\n                ref={ref}\r\n                sx={{\r\n                    border: '1px solid',\r\n                    borderColor: theme.palette.mode === 'dark' ? theme.palette.dark.light + 15 : theme.palette.grey[200],\r\n                    ':hover': {\r\n                        boxShadow: theme.palette.mode === 'dark' ? '0 2px 14px 0 rgb(33 150 243 / 10%)' : '0 2px 14px 0 rgb(32 40 45 / 8%)'\r\n                    },\r\n                    ...sx\r\n                }}\r\n                {...others}\r\n            >\r\n                {/* card header and action */}\r\n                {!darkTitle && title && (\r\n                    <CardHeader sx={{ p: 2.5 }} title={<Typography variant=\"h5\">{title}</Typography>} action={secondary} />\r\n                )}\r\n                {darkTitle && title && (\r\n                    <CardHeader sx={{ p: 2.5 }} title={<Typography variant=\"h4\">{title}</Typography>} action={secondary} />\r\n                )}\r\n\r\n                {/* content & header divider */}\r\n                {title && (\r\n                    <Divider\r\n                        sx={{\r\n                            opacity: 1,\r\n                            borderColor: theme.palette.mode === 'dark' ? theme.palette.dark.light + 15 : theme.palette.grey[200]\r\n                        }}\r\n                    />\r\n                )}\r\n\r\n                {/* card content */}\r\n                {content && (\r\n                    <CardContent sx={{ p: 2.5, ...contentSX }} className={contentClass || ''}>\r\n                        {children}\r\n                    </CardContent>\r\n                )}\r\n                {!content && children}\r\n            </Card>\r\n        );\r\n    }\r\n);\r\n\r\nSubCard.propTypes = {\r\n    children: PropTypes.node,\r\n    content: PropTypes.bool,\r\n    contentClass: PropTypes.string,\r\n    darkTitle: PropTypes.bool,\r\n    secondary: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\r\n    sx: PropTypes.object,\r\n    contentSX: PropTypes.object,\r\n    title: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object])\r\n};\r\n\r\nSubCard.defaultProps = {\r\n    content: true\r\n};\r\n\r\nexport default SubCard;\r\n","import PropTypes from 'prop-types';\r\nimport { useEffect, useState } from 'react';\r\n// material-ui\r\nimport { Button, ButtonGroup, Grid, IconButton, Stack, Tooltip, Typography, useMediaQuery } from '@mui/material';\r\n\r\n// third-party\r\nimport { format } from 'date-fns';\r\n\r\n// assets\r\nimport { IconChevronLeft, IconChevronRight, IconLayoutGrid, IconTemplate, IconLayoutList, IconListNumbers } from '@tabler/icons-react';\r\n\r\n// constant\r\nconst viewOptions = [\r\n    {\r\n        label: 'Month',\r\n        value: 'dayGridMonth',\r\n        icon: IconLayoutGrid\r\n    },\r\n    {\r\n        label: 'Week',\r\n        value: 'timeGridWeek',\r\n        icon: IconTemplate\r\n    },\r\n    {\r\n        label: 'Day',\r\n        value: 'timeGridDay',\r\n        icon: IconLayoutList\r\n    },\r\n    {\r\n        label: 'Agenda',\r\n        value: 'listWeek',\r\n        icon: IconListNumbers\r\n    }\r\n];\r\n\r\n// ==============================|| CALENDAR TOOLBAR ||============================== //\r\n\r\nconst Toolbar = ({ date, view, onClickNext, onClickPrev, onClickToday, onChangeView, ...others }) => {\r\n    const matchSm = useMediaQuery((theme) => theme.breakpoints.down('md'));\r\n    const [newViewOption, setNewViewOption] = useState(viewOptions);\r\n\r\n    useEffect(() => {\r\n        let newOption = viewOptions;\r\n        if (matchSm) {\r\n            newOption = viewOptions.filter((options) => options.value !== 'dayGridMonth' && options.value !== 'timeGridWeek');\r\n        }\r\n        setNewViewOption(newOption);\r\n    }, [matchSm]);\r\n\r\n    return (\r\n        <Grid alignItems=\"center\" container justifyContent=\"space-between\" spacing={3} {...others} sx={{ pb: 3 }}>\r\n            <Grid item>\r\n                <Button variant=\"outlined\" onClick={onClickToday}>\r\n                    Today\r\n                </Button>\r\n            </Grid>\r\n            <Grid item>\r\n                <Stack direction=\"row\" alignItems=\"center\" spacing={3}>\r\n                    <IconButton onClick={onClickPrev} size=\"large\" aria-label=\"left side\">\r\n                        <IconChevronLeft />\r\n                    </IconButton>\r\n                    <Typography variant=\"h3\" color=\"textPrimary\">\r\n                        {format(date, 'MMMM yyyy')}\r\n                    </Typography>\r\n                    <IconButton onClick={onClickNext} size=\"large\" aria-label=\"right side\">\r\n                        <IconChevronRight />\r\n                    </IconButton>\r\n                </Stack>\r\n            </Grid>\r\n            <Grid item>\r\n                <ButtonGroup variant=\"outlined\" aria-label=\"outlined button group\">\r\n                    {newViewOption.map((viewOption) => {\r\n                        const Icon = viewOption.icon;\r\n                        return (\r\n                            <Tooltip title={viewOption.label} key={viewOption.value}>\r\n                                <Button\r\n                                    disableElevation\r\n                                    variant={viewOption.value === view ? 'contained' : 'outlined'}\r\n                                    onClick={() => onChangeView(viewOption.value)}\r\n                                >\r\n                                    <Icon stroke=\"2\" size=\"20px\" />\r\n                                </Button>\r\n                            </Tooltip>\r\n                        );\r\n                    })}\r\n                </ButtonGroup>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\nToolbar.propTypes = {\r\n    date: PropTypes.object,\r\n    view: PropTypes.string,\r\n    onClickNext: PropTypes.func,\r\n    onClickPrev: PropTypes.func,\r\n    onClickToday: PropTypes.func,\r\n    onChangeView: PropTypes.func\r\n};\r\n\r\nexport default Toolbar;\r\n","// material-ui\r\nimport { styled } from '@mui/material/styles';\r\n\r\nconst ExperimentalStyled = styled('div')(({ theme }) => ({\r\n    // hide license message\r\n    '& .fc-license-message': {\r\n        display: 'none'\r\n    },\r\n\r\n    // basic style\r\n    '& .fc': {\r\n        '--fc-bg-event-opacity': 1,\r\n        '--fc-border-color': theme.palette.divider,\r\n        '--fc-daygrid-event-dot-width': '10px',\r\n        '--fc-today-bg-color': theme.palette.mode === 'dark' ? theme.palette.dark[800] : theme.palette.primary.light,\r\n        '--fc-list-event-dot-width': '10px',\r\n        '--fc-event-border-color': theme.palette.primary.dark,\r\n        '--fc-now-indicator-color': theme.palette.error.main,\r\n        color: theme.palette.text.primary,\r\n        fontFamily: theme.typography.fontFamily\r\n    },\r\n\r\n    // date text\r\n    '& .fc .fc-daygrid-day-top': {\r\n        display: 'grid',\r\n        '& .fc-daygrid-day-number': {\r\n            textAlign: 'center',\r\n            marginTop: 12,\r\n            marginBottom: 12\r\n        }\r\n    },\r\n\r\n    // weekday\r\n    '& .fc .fc-col-header-cell': {\r\n        backgroundColor: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.grey[50]\r\n    },\r\n\r\n    '& .fc .fc-col-header-cell-cushion': {\r\n        color: theme.palette.grey[900],\r\n        padding: 16\r\n    },\r\n    '& .fc-theme-standard .fc-list': {\r\n        overflowX: 'auto'\r\n    },\r\n\r\n    // events\r\n    '& .fc-direction-ltr .fc-daygrid-event.fc-event-end, .fc-direction-rtl .fc-daygrid-event.fc-event-start': {\r\n        marginLeft: 4,\r\n        marginBottom: 6,\r\n        borderRadius: '6px'\r\n    },\r\n\r\n    '& .fc-direction-ltr .fc-daygrid-event.fc-event-start, .fc-direction-rtl .fc-daygrid-event.fc-event-end': {\r\n        marginLeft: 4,\r\n        marginBottom: 6,\r\n        borderRadius: '6px'\r\n    },\r\n\r\n    '& .fc-h-event .fc-event-main': {\r\n        padding: 4,\r\n        paddingLeft: 8\r\n    },\r\n\r\n    // popover when multiple events\r\n    '& .fc .fc-more-popover': {\r\n        border: 'none',\r\n        borderRadius: '14px'\r\n    },\r\n\r\n    '& .fc .fc-more-popover .fc-popover-body': {\r\n        backgroundColor: theme.palette.mode === 'dark' ? theme.palette.dark[800] : theme.palette.grey[200],\r\n        borderBottomLeftRadius: '12px',\r\n        borderBottomRightRadius: '12px'\r\n    },\r\n\r\n    '& .fc .fc-popover-header': {\r\n        padding: 12,\r\n        borderTopLeftRadius: '12px',\r\n        borderTopRightRadius: '12px',\r\n        backgroundColor: theme.palette.mode === 'dark' ? theme.palette.dark[800] : theme.palette.grey[200],\r\n        color: theme.palette.mode === 'dark' ? theme.palette.dark.light : theme.palette.text.primary\r\n    },\r\n\r\n    // agenda view\r\n    '& .fc-theme-standard .fc-list-day-cushion': {\r\n        backgroundColor: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.grey[100]\r\n    },\r\n\r\n    '& .fc .fc-list-event:hover td': {\r\n        backgroundColor: theme.palette.mode === 'dark' ? theme.palette.dark[800] : theme.palette.grey[100]\r\n    },\r\n\r\n    '& .fc-timegrid-event-harness-inset .fc-timegrid-event, .fc-timegrid-event.fc-event-mirror, .fc-timegrid-more-link': {\r\n        padding: 8,\r\n        margin: 2\r\n    }\r\n}));\r\n\r\nexport default ExperimentalStyled;\r\n","import { useEffect, useRef, useState } from 'react';\r\n\r\n// material-ui\r\nimport { Button, Dialog, Typography, Box } from '@mui/material';\r\n\r\n// third-party\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport listPlugin from '@fullcalendar/list';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport timelinePlugin from '@fullcalendar/timeline';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\n\r\n// project imports\r\nimport Toolbar from './Toolbar';\r\nimport AddEventForm from './AddEventForm';\r\nimport CalendarStyled from './CalendarStyled';\r\n\r\nimport Loader from 'ui-component/Loader';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SubCard from 'ui-component/cards/SubCard';\r\n\r\nimport { useDispatch, useSelector } from 'store';\r\nimport { getEvents, addEvent, updateEvent, removeEvent } from 'store/slices/calendar';\r\n\r\n// assets\r\nimport AddAlarmTwoToneIcon from '@mui/icons-material/AddAlarmTwoTone';\r\n\r\nconst Calendar = () => {\r\n    const dispatch = useDispatch();\r\n    const calendarRef = useRef(null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    // Bandera de \"Próximamente\"\r\n    const [isComingSoon, setIsComingSoon] = useState(true);\r\n\r\n    const [events, setEvents] = useState([]);\r\n    const calendarState = useSelector((state) => state.calendar);\r\n\r\n    useEffect(() => {\r\n        dispatch(getEvents()).then(() => setLoading(false));\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setEvents(calendarState.events);\r\n    }, [calendarState]);\r\n\r\n    if (loading) return <Loader />;\r\n\r\n    if (isComingSoon) {\r\n        return (\r\n            <MainCard title=\"Configuración\">\r\n                <Box\r\n                    display=\"flex\"\r\n                    alignItems=\"center\"\r\n                    justifyContent=\"center\"\r\n                    height=\"300px\"\r\n                    sx={{\r\n                        backgroundColor: '#f8f9fa',\r\n                        borderRadius: 1,\r\n                        textAlign: 'center',\r\n                    }}\r\n                >\r\n                    <Typography variant=\"h2\" color=\"#97C703\">\r\n                        Próximamente Disponible\r\n                    </Typography>\r\n                </Box>\r\n            </MainCard>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <MainCard\r\n            title=\"Event Calendar\"\r\n            secondary={\r\n                <Button color=\"secondary\" variant=\"contained\" disabled={isComingSoon}>\r\n                    <AddAlarmTwoToneIcon fontSize=\"small\" sx={{ mr: 0.75 }} />\r\n                    Add New Event\r\n                </Button>\r\n            }\r\n        >\r\n            <CalendarStyled>\r\n                <Toolbar />\r\n                <SubCard>\r\n                    <FullCalendar\r\n                        plugins={[listPlugin, dayGridPlugin, timelinePlugin, timeGridPlugin, interactionPlugin]}\r\n                        events={events}\r\n                        ref={calendarRef}\r\n                    />\r\n                </SubCard>\r\n            </CalendarStyled>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default Calendar;\r\n"],"names":["SubCard","React","_ref","ref","children","content","contentClass","darkTitle","secondary","sx","contentSX","title","others","theme","useTheme","_jsxs","Card","border","borderColor","palette","mode","dark","light","grey","boxShadow","_jsx","CardHeader","p","Typography","variant","action","Divider","opacity","CardContent","className","defaultProps","viewOptions","label","value","icon","IconLayoutGrid","IconTemplate","IconLayoutList","IconListNumbers","date","view","onClickNext","onClickPrev","onClickToday","onChangeView","matchSm","useMediaQuery","breakpoints","down","newViewOption","setNewViewOption","useState","useEffect","newOption","filter","options","Grid","alignItems","container","justifyContent","spacing","pb","item","Button","onClick","Stack","direction","IconButton","size","IconChevronLeft","color","format","IconChevronRight","ButtonGroup","map","viewOption","Icon","Tooltip","disableElevation","stroke","styled","display","divider","primary","error","main","text","fontFamily","typography","textAlign","marginTop","marginBottom","backgroundColor","padding","overflowX","marginLeft","borderRadius","paddingLeft","borderBottomLeftRadius","borderBottomRightRadius","borderTopLeftRadius","borderTopRightRadius","margin","Calendar","dispatch","useDispatch","calendarRef","useRef","loading","setLoading","isComingSoon","setIsComingSoon","events","setEvents","calendarState","useSelector","state","calendar","getEvents","then","Loader","MainCard","Box","height","disabled","AddAlarmTwoToneIcon","fontSize","mr","CalendarStyled","Toolbar","FullCalendar","plugins","listPlugin","dayGridPlugin","timelinePlugin","timeGridPlugin","interactionPlugin"],"sourceRoot":""}