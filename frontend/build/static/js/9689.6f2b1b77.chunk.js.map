{"version":3,"file":"static/js/9689.6f2b1b77.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/EditOutlined.js","../node_modules/@mui/icons-material/esm/DeleteOutline.js","views/application/customer/CustomerList.js","../node_modules/@mui/material/TableHead/tableHeadClasses.js","../node_modules/@mui/material/TableHead/TableHead.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m14.06 9.02.92.92L5.92 19H5v-.92l9.06-9.06M17.66 3c-.25 0-.51.1-.7.29l-1.83 1.83 3.75 3.75 1.83-1.83c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.2-.2-.45-.29-.71-.29zm-3.6 3.19L3 17.25V21h3.75L17.81 9.94l-3.75-3.75z\"\n}), 'EditOutlined');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM8 9h8v10H8V9zm7.5-5-1-1h-5l-1 1H5v2h14V4z\"\n}), 'DeleteOutline');","import React, { useState, useEffect } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, IconButton, Paper, Avatar, Box, Button } from '@mui/material';\r\nimport { EditOutlined, DeleteOutline } from '@mui/icons-material'; // Cambié los iconos a versiones más pequeñas\r\nimport axios from 'axios';\r\nimport { motion } from 'framer-motion'; // Importamos framer-motion\r\nimport { useNavigate } from 'react-router-dom'; // Usamos useNavigate en lugar de useHistory\r\n\r\nconst UserTable = () => {\r\n    const [users, setUsers] = useState([]);\r\n    const navigate = useNavigate(); // Inicializamos el hook useNavigate\r\n\r\n    // Obtener usuarios desde la API\r\n    useEffect(() => {\r\n        const fetchUsers = async () => {\r\n            try {\r\n                const response = await axios.get('https://gestion-smart-backend.onrender.com/api/users');\r\n                setUsers(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching users:', error);\r\n            }\r\n        };\r\n\r\n        fetchUsers();\r\n    }, []);\r\n\r\n    // Funciones para manejar acciones de editar y eliminar\r\n    const handleEdit = (id) => {\r\n        console.log('Edit user with id:', id);\r\n        // Redirigir o abrir modal para editar el usuario\r\n    };\r\n\r\n    const handleDelete = (id) => {\r\n        console.log('Delete user with id:', id);\r\n        // Lógica para eliminar el usuario\r\n    };\r\n\r\n    // Función para aplicar estilos según el estado\r\n    const getStatusStyle = (status) => {\r\n        if (status === 'active') {\r\n            return { color: 'green', fontWeight: 'bold' };\r\n        } else if (status === 'inactive') {\r\n            return { color: 'gray', fontWeight: 'bold' };\r\n        } else {\r\n            return { color: 'blue', fontWeight: 'bold' };\r\n        }\r\n    };\r\n\r\n    // Función para generar las iniciales del usuario\r\n    const getInitials = (firstName, lastName) => {\r\n        return (firstName[0] + lastName[0]).toUpperCase();\r\n    };\r\n\r\n    // Función para redirigir a la página de registro\r\n    const handleAddUser = () => {\r\n        navigate('/pages/register/register2'); // Redirige a la página /register/register2\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ position: 'relative', minHeight: '100vh' }}>\r\n            <TableContainer component={Paper}>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Avatar</TableCell>\r\n                            <TableCell>First Name</TableCell>\r\n                            <TableCell>Last Name</TableCell>\r\n                            <TableCell>Country</TableCell>\r\n                            <TableCell>Email</TableCell>\r\n                            <TableCell>Status</TableCell>\r\n                            <TableCell>Actions</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {users.map((user) => (\r\n                            <TableRow key={user._id}>\r\n                                <TableCell>\r\n                                    <Avatar>{getInitials(user.firstName, user.lastName)}</Avatar> {/* Muestra las iniciales si no hay imagen */}\r\n                                </TableCell>\r\n                                <TableCell>{user.firstName}</TableCell>\r\n                                <TableCell>{user.lastName}</TableCell>\r\n                                <TableCell>{user.country || \"no values\"}</TableCell> {/* Muestra \"no values\" si country está vacío */}\r\n                                <TableCell>{user.email}</TableCell>\r\n                                <TableCell>\r\n                                    <motion.div\r\n                                        style={getStatusStyle(user.status || \"active\")}\r\n                                        initial={{ opacity: 0 }}\r\n                                        animate={{ opacity: 1 }}\r\n                                        transition={{ duration: 0.5 }}\r\n                                    >\r\n                                        {user.status || \"active\"}\r\n                                    </motion.div>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    {/* Botones de editar y eliminar con iconos pequeños */}\r\n                                    <IconButton onClick={() => handleEdit(user._id)} color=\"primary\" size=\"small\">\r\n                                        <EditOutlined fontSize=\"small\" />\r\n                                    </IconButton>\r\n                                    <IconButton onClick={() => handleDelete(user._id)} color=\"secondary\" size=\"small\" style={{ marginLeft: 10 }}>\r\n                                        <DeleteOutline fontSize=\"small\" />\r\n                                    </IconButton>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            {/* Botón Agregar nuevo usuario en la esquina inferior derecha */}\r\n            <Box sx={{ position: 'absolute', bottom: 20, right: 20 }}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    sx={{\r\n                        backgroundColor: 'limegreen',\r\n                        color: 'white',\r\n                        '&:hover': {\r\n                            backgroundColor: 'darkgreen',\r\n                        },\r\n                    }}\r\n                    onClick={handleAddUser} // Llamamos a la función para redirigir\r\n                >\r\n                    Agregar nuevo usuario\r\n                </Button>\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default UserTable;\r\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableHeadUtilityClass(slot) {\n  return generateUtilityClass('MuiTableHead', slot);\n}\nconst tableHeadClasses = generateUtilityClasses('MuiTableHead', ['root']);\nexport default tableHeadClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport { getTableHeadUtilityClass } from './tableHeadClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\n};\nconst TableHeadRoot = styled('thead', {\n  name: 'MuiTableHead',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-header-group'\n});\nconst tablelvl2 = {\n  variant: 'head'\n};\nconst defaultComponent = 'thead';\nconst TableHead = /*#__PURE__*/React.forwardRef(function TableHead(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableHead'\n  });\n  const {\n      className,\n      component = defaultComponent\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableHeadRoot, _extends({\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableHead;"],"names":["createSvgIcon","_jsx","d","UserTable","users","setUsers","useState","navigate","useNavigate","useEffect","async","response","axios","data","error","console","fetchUsers","_jsxs","Box","sx","position","minHeight","children","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","map","user","Avatar","firstName","lastName","toUpperCase","country","email","motion","style","status","color","fontWeight","initial","opacity","animate","transition","duration","IconButton","onClick","handleEdit","id","_id","log","size","EditOutlined","fontSize","handleDelete","marginLeft","DeleteOutline","bottom","right","Button","variant","backgroundColor","handleAddUser","getTableHeadUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TableHeadRoot","styled","name","overridesResolver","props","styles","root","display","tablelvl2","defaultComponent","React","inProps","ref","useDefaultProps","className","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","Tablelvl2Context","value","as","clsx","role"],"sourceRoot":""}