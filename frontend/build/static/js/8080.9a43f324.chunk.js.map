{"version":3,"file":"static/js/8080.9a43f324.chunk.js","mappings":"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","sources":["hooks/useScriptRef.js","ui-component/cards/AuthFooter.js","views/pages/authentication/AuthCardWrapper.js","views/pages/authentication/AuthWrapper1.js","views/pages/authentication/auth-forms/AuthLogin.js","views/pages/authentication/authentication3/Login3.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\r\n\r\n// ==============================|| ELEMENT REFERENCE HOOKS ||============================== //\r\n\r\nconst useScriptRef = () => {\r\n    const scripted = useRef(true);\r\n\r\n    useEffect(\r\n        () => () => {\r\n            scripted.current = false;\r\n        },\r\n        []\r\n    );\r\n\r\n    return scripted;\r\n};\r\n\r\nexport default useScriptRef;\r\n","// material-ui\r\nimport { Link, Typography, Stack } from '@mui/material';\r\n\r\n// ==============================|| FOOTER - AUTHENTICATION 2 & 3 ||============================== //\r\n\r\nconst AuthFooter = () => (\r\n    <Stack direction=\"row\" justifyContent=\"space-between\">\r\n        <Typography variant=\"subtitle2\" component={Link} href=\"#\" target=\"_blank\" underline=\"hover\">\r\n            version 1.0.6\r\n        </Typography>\r\n      \r\n    </Stack>\r\n);\r\n\r\nexport default AuthFooter;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Box } from '@mui/material';\r\n\r\n// project import\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\r\n\r\nconst AuthCardWrapper = ({ children, ...other }) => (\r\n    <MainCard\r\n        sx={{\r\n            maxWidth: { xs: 400, lg: 475 },\r\n            margin: { xs: 2.5, md: 3 },\r\n            '& > *': {\r\n                flexGrow: 1,\r\n                flexBasis: '50%'\r\n            }\r\n        }}\r\n        content={false}\r\n        {...other}\r\n    >\r\n        <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\r\n    </MainCard>\r\n);\r\n\r\nAuthCardWrapper.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default AuthCardWrapper;\r\n","// material-ui\r\nimport { styled } from '@mui/material/styles';\r\n\r\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\r\n\r\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? theme.palette.background.default : theme.palette.grey[100],\r\n    minHeight: '100vh'\r\n}));\r\n\r\nexport default AuthWrapper1;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Checkbox,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormHelperText,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    Typography,\r\n    CircularProgress,  // Importar CircularProgress\r\n} from '@mui/material';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport useScriptRef from 'hooks/useScriptRef';\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\n\r\nconst JWTLogin = ({ loginProp, ...others }) => {\r\n    const theme = useTheme();\r\n    const scriptedRef = useScriptRef();\r\n    const navigate = useNavigate();\r\n\r\n    const [checked, setChecked] = React.useState(true);\r\n    const [showPassword, setShowPassword] = React.useState(false);\r\n    const [loading, setLoading] = React.useState(false); // Estado de carga\r\n\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    // Función para almacenar el token y userId en localStorage\r\n    function setItemAndLog(key, value) {\r\n        localStorage.setItem(key, value);\r\n        console.log(`Se ha guardado en localStorage: ${key} = ${value}`);\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                email: '',\r\n                password: ''\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n                email: Yup.string().email('Debe ser un email válido').max(255).required('El Email / Usuario es obligatorio'),\r\n                password: Yup.string().max(255).required('La contraseña es obligatoria')\r\n            })}\r\n            onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n                setLoading(true);  // Iniciar la carga\r\n                try {\r\n                    const response = await fetch(\"https://https://vigilant-prosperity-production.up.railway.app.up.railway.app/api/users/login\", {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                        },\r\n                        body: JSON.stringify({\r\n                            email: values.email,\r\n                            password: values.password\r\n                        })\r\n                    });\r\n\r\n                    const data = await response.json();\r\n                    console.log('Respuesta de la API:', data);  // Verifica toda la respuesta\r\n\r\n                    if (response.ok) {\r\n                        const token = data.token || data.accessToken || data.jwt; // Ajusta según el nombre correcto\r\n                        const userId = data.userId; // Asegúrate de que el backend esté devolviendo el `userId`\r\n\r\n                        if (token && userId) {\r\n                            // Guarda el token y el userId en localStorage\r\n                            localStorage.setItem('token', token);\r\n                            localStorage.setItem('userId', userId);\r\n                            console.log('Login exitoso, redirigiendo al dashboard');\r\n                            navigate('/dashboard/default');  // Redirigir al dashboard o la página deseada\r\n                        } else {\r\n                            console.log('Token o userId no encontrado en la respuesta de la API.');\r\n                        }\r\n                    } else {\r\n                        setErrors({ submit: data.message || 'Error en el login' });\r\n                        console.log('Credenciales incorrectas');\r\n                    }\r\n\r\n                    setStatus({ success: true });\r\n                    setSubmitting(false);\r\n                } catch (err) {\r\n                    console.error('Error al hacer login:', err);\r\n                    setStatus({ success: false });\r\n                    setErrors({ submit: err.message });\r\n                    setSubmitting(false);\r\n                } finally {\r\n                    setLoading(false);  // Detener la carga\r\n                }\r\n            }}\r\n        >\r\n            {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                <form noValidate onSubmit={handleSubmit} {...others}>\r\n                    <FormControl\r\n                        fullWidth\r\n                        error={Boolean(touched.email && errors.email)}\r\n                        sx={{ ...theme.typography.customInput, color: '#000' }}\r\n                    >\r\n                        <InputLabel htmlFor=\"outlined-adornment-email-login\">Correo / Usuario</InputLabel>\r\n                        <OutlinedInput\r\n                            id=\"outlined-adornment-email-login\"\r\n                            type=\"email\"\r\n                            value={values.email}\r\n                            name=\"email\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            inputProps={{}}\r\n                            sx={{ color: '#000' }}\r\n                        />\r\n                        {touched.email && errors.email && (\r\n                            <FormHelperText error id=\"standard-weight-helper-text-email-login\">\r\n                                {errors.email}\r\n                            </FormHelperText>\r\n                        )}\r\n                    </FormControl>\r\n\r\n                    <FormControl\r\n                        fullWidth\r\n                        error={Boolean(touched.password && errors.password)}\r\n                        sx={{ ...theme.typography.customInput, marginTop: '10px', color: '#000' }}\r\n                    >\r\n                        <InputLabel htmlFor=\"outlined-adornment-password-login\">Contraseña</InputLabel>\r\n                        <OutlinedInput\r\n                            sx={{ color: '#000' }}\r\n                            id=\"outlined-adornment-password-login\"\r\n                            type={showPassword ? 'text' : 'password'}\r\n                            value={values.password}\r\n                            name=\"password\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                        aria-label=\"toggle password visibility\"\r\n                                        onClick={handleClickShowPassword}\r\n                                        onMouseDown={handleMouseDownPassword}\r\n                                        edge=\"end\"\r\n                                        size=\"large\"\r\n                                    >\r\n                                        {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            }\r\n                            label=\"Contraseña\"\r\n                        />\r\n                        {touched.password && errors.password && (\r\n                            <FormHelperText error id=\"standard-weight-helper-text-password-login\">\r\n                                {errors.password}\r\n                            </FormHelperText>\r\n                        )}\r\n                    </FormControl>\r\n\r\n                    <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                        <Grid item>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        checked={checked}\r\n                                        onChange={(event) => setChecked(event.target.checked)}\r\n                                        name=\"remember\"\r\n                                    />\r\n                                }\r\n                                label=\"Recordar sesión\"\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                type=\"submit\"\r\n                                disabled={isSubmitting || loading}  // Desactivar el botón mientras está cargando\r\n                            >\r\n                                {loading ? <CircularProgress size={24} color=\"primary\" /> : 'Iniciar sesión'}\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    {errors.submit && (\r\n                        <Box mt={2} textAlign=\"center\" color=\"error.main\">\r\n                            <Typography variant=\"h6\">{errors.submit}</Typography>\r\n                        </Box>\r\n                    )}\r\n                </form>\r\n            )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nJWTLogin.propTypes = {\r\n    loginProp: PropTypes.func\r\n};\r\n\r\nexport default JWTLogin;\r\n","import { Link } from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from '@mui/material';\r\n\r\n// project imports\r\nimport AuthWrapper1 from '../AuthWrapper1';\r\nimport AuthCardWrapper from '../AuthCardWrapper';\r\nimport AuthLogin from '../auth-forms/AuthLogin';\r\nimport Logo from 'ui-component/Logo';\r\nimport AuthFooter from 'ui-component/cards/AuthFooter';\r\nimport useAuth from 'hooks/useAuth';\r\n\r\n// assets\r\n\r\n// ================================|| AUTH3 - LOGIN ||================================ //\r\n\r\nconst Login = () => {\r\n    const theme = useTheme();\r\n    const { isLoggedIn } = useAuth();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n    return (\r\n        <AuthWrapper1>\r\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\r\n                <Grid item xs={12}>\r\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\r\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\r\n                            <AuthCardWrapper>\r\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\r\n                                    <Grid item sx={{ mb: 3 }}>\r\n                                        <Link to=\"#\" aria-label=\"theme-logo\">\r\n                                            <Logo />\r\n                                        </Link>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid\r\n                                            container\r\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\r\n                                            alignItems=\"center\"\r\n                                            justifyContent=\"center\"\r\n                                        >\r\n                                            <Grid item>\r\n                                                <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\r\n                                                    <Typography\r\n                                                        color={theme.palette.secondary.main}\r\n                                                        gutterBottom\r\n                                                        variant={matchDownSM ? 'h3' : 'h2'}\r\n                                                    >\r\n                                                        Hi, Welcome Back\r\n                                                    </Typography>\r\n                                                    <Typography\r\n                                                        variant=\"caption\"\r\n                                                        fontSize=\"16px\"\r\n                                                        textAlign={matchDownSM ? 'center' : 'inherit'}\r\n                                                    >\r\n                                                        Enter your credentials to continue\r\n                                                    </Typography>\r\n                                                </Stack>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <AuthLogin />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Divider />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\r\n                                            <Typography\r\n                                                component={Link}\r\n                                                to={isLoggedIn ? '/pages/register/register3' : '/register'}\r\n                                                variant=\"subtitle1\"\r\n                                                sx={{ textDecoration: 'none' }}\r\n                                            >\r\n                                                Don&apos;t have an account?\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </AuthCardWrapper>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\r\n                    <AuthFooter />\r\n                </Grid>\r\n            </Grid>\r\n        </AuthWrapper1>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["useScriptRef","scripted","useRef","useEffect","current","AuthFooter","_jsx","Stack","direction","justifyContent","children","Typography","variant","component","Link","href","target","underline","_ref","other","MainCard","sx","maxWidth","xs","lg","margin","md","flexGrow","flexBasis","content","Box","p","sm","xl","styled","theme","backgroundColor","palette","mode","background","default","grey","minHeight","loginProp","others","useTheme","navigate","useNavigate","checked","setChecked","React","showPassword","setShowPassword","loading","setLoading","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","Formik","initialValues","email","password","validationSchema","Yup","shape","max","required","onSubmit","async","values","_ref2","setErrors","setStatus","setSubmitting","response","fetch","method","headers","body","JSON","stringify","data","json","console","log","ok","token","accessToken","jwt","userId","localStorage","setItem","submit","message","success","err","error","_ref3","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","_jsxs","noValidate","FormControl","fullWidth","Boolean","typography","customInput","color","InputLabel","htmlFor","OutlinedInput","id","type","value","name","onBlur","onChange","inputProps","FormHelperText","marginTop","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","edge","size","Visibility","VisibilityOff","label","Grid","container","alignItems","item","FormControlLabel","control","Checkbox","Button","disabled","CircularProgress","mt","textAlign","Login","isLoggedIn","useAuth","matchDownSM","useMediaQuery","breakpoints","down","AuthWrapper1","m","mb","AuthCardWrapper","spacing","to","Logo","secondary","main","gutterBottom","fontSize","AuthLogin","Divider","textDecoration"],"sourceRoot":""}